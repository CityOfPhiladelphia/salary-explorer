{"ts":1360268558934,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360268576695,"patch":[[{"diffs":[[1,"var Salaries = Salaries || {Models: {}, Views: {}, Collections: {}, Routers: {}}\r\n    ,FusionTable = FusionTable || {}\r\n    ,util = util || {};\r\n(function(app, db, util, $, _) {\r\n    \r\n    app.Collections.Employees = Backbone.Collection.extend({\r\n        defaultSettings: {\r\n            fields: [\"departmentid\", \"department\", \"lastname\", \"firstname\", \"middleinitial\", \"title\", \"salary\", \"salarygroup\", \"id\"]\r\n            ,group: false\r\n            ,orderby: \"salary\"\r\n            ,dir: \"desc\"\r\n            ,limit: 20\r\n            ,offset: 0\r\n        }\r\n        ,initialize: function(models, options) {\r\n            this.settings = _.defaults(options.settings || {}, this.defaultSettings); // Incorporate any URL parameters\r\n            this.moreAvailable = false; // Initialize this property\r\n        }\r\n        ,url: function() { return db.buildUrl(db.query(this.settings)) + \"&callback=?\"; }\r\n        ,parse: function(response) {\r\n            // Convert array of arrays to array of objects with our keys/fields\r\n            var self = this\r\n                ,newRows = []\r\n                ,newRow, i, key;;\r\n            if(response.rows !== undefined && response.rows.length) {\r\n                // If we received our limit + 1, we know there's another page available, and we remove that +1 from the collection\r\n                if(response.rows.length > this.settings.limit) {\r\n                    this.moreAvailable = true;\r\n                    response.rows.pop();\r\n                } else {\r\n                    this.moreAvailable = false;\r\n                }\r\n                // Add keys/field names to each row\r\n                _.each(response.rows, function(row) {\r\n                    newRow = {};\r\n                    i = 0;\r\n                    for(i in row) {\r\n                        key = self.settings.fields[i];\r\n                        newRow[key] = (key === \"salary\" ? parseInt(row[i]) : row[i]);\r\n                    }\r\n                    newRows.push(newRow);\r\n                });\r\n            }\r\n            return newRows;\r\n        }\r\n    });\r\n    \r\n    app.Views.EmployeesView = Backbone.View.extend({\r\n        initialize: function() {\r\n            _.bindAll(this, \"onClickMore\", \"onSearch\", \"onClearSearch\");\r\n            this.collection = this.options.collection;\r\n            this.template = _.template($(\"#tmpl-employees\").html());\r\n            this.collection.on(\"reset\", this.render, this);\r\n            this.collection.on(\"add\", this.addRow, this);\r\n        }\r\n        ,events: {\r\n            \"click .more\": \"onClickMore\"\r\n            ,\"submit .form-search\": \"onSearch\"\r\n            ,\"click #clear-search\": \"onClearSearch\"\r\n        }\r\n        ,onClickMore: function(e) {\r\n            e.preventDefault();\r\n            var limit = this.collection.settings.limit || 10\r\n                ,offset = this.collection.settings.offset || 0;\r\n            this.collection.settings.offset = offset + limit;\r\n            this.collection.fetch({update: true, remove: false});\r\n        }\r\n        ,onSearch: function(e) {\r\n            e.preventDefault();\r\n            var input = e.target.search.value;\r\n            if(input) app.router.navigate(\"employees?search=\" + input + (this.collection.settings.department !== undefined && this.collection.settings.department ? \"&department=\" + this.collection.settings.department : \"\"), {trigger: true});\r\n        }\r\n        ,onClearSearch: function(e) {\r\n            e.preventDefault();\r\n            app.router.navigate(\"employees\" + (this.collection.settings.department !== undefined && this.collection.settings.department ? \"?department=\" + this.collection.settings.department : \"\"), {trigger: true});\r\n        }\r\n        ,render: function() {\r\n            var title, self = this;\r\n            \r\n            // Determine title\r\n            if(this.collection.settings.department === undefined) {\r\n                title = \"All Employees\";\r\n            } else if(codes !== undefined && codes.department !== undefined && codes.department[this.collection.settings.department] !== undefined) {\r\n                title = codes.department[this.collection.settings.department];\r\n            } else {\r\n                title = \"Salaries\"; // Intentionally vague\r\n            }\r\n            \r\n            this.$el.html(this.template({\r\n                rows: this.collection.toJSON()\r\n                ,settings: this.collection.settings\r\n                ,sortProps: util.getSortProps(this.collection.settings)\r\n                ,title: title\r\n            }));\r\n            this.collection.each(function(model) {\r\n                // TODO: Ideally I'd only call append() once to limit DOM insertions, but how do I append an array of el's?\r\n                this.$(\"tbody\").append((new app.Views.EmployeeView({model: model, collection: self.collection})).render().el);\r\n            });\r\n            this.checkMoreButton();\r\n            return this;\r\n        }\r\n        ,addRow: function(model) {\r\n            this.$(\"tbody\").append((new app.Views.EmployeeView({model: model, collection: this.collection})).render().el);\r\n            this.checkMoreButton();\r\n        }\r\n        ,checkMoreButton: function() {\r\n            this.$(\".more\").toggle(this.collection.moreAvailable);\r\n        }\r\n    });\r\n    \r\n    app.Views.EmployeeView = Backbone.View.extend({\r\n        tagName: \"tr\"\r\n        ,initialize: function() {\r\n            this.template = _.template($(\"#tmpl-employee\").html());\r\n        }\r\n        ,render: function() {\r\n            this.$el.html(this.template({row: this.model.toJSON(), settings: this.collection.settings}));\r\n            return this;\r\n        }\r\n    });\r\n    \r\n})(Salaries, FusionTable, util, jQuery, _);"]],"start1":0,"start2":0,"length1":0,"length2":5664}]],"length":5664,"saved":false}
{"ts":1360334511411,"patch":[[{"diffs":[[0,"ch.value"],[1,"\r\n                ,params = app.router.buildParams({search: input}, [\"department\"])"],[0,";\r\n     "]],"start1":3104,"start2":3104,"length1":16,"length2":99},{"diffs":[[0,"        "],[1,"//"],[0,"if(input"]],"start1":3202,"start2":3202,"length1":16,"length2":18},{"diffs":[[0,"igger: true});\r\n"],[1,"            if(input) app.router.navigate(\"employees?\" + params);\r\n"],[0,"        }\r\n     "]],"start1":3427,"start2":3427,"length1":32,"length2":99}]],"length":5816,"saved":false}
{"ts":1360334520997,"patch":[[{"diffs":[[0,"\" + "],[1,"$.param("],[0,"params)"],[1,")"],[0,";\r\n "]],"start1":3496,"start2":3496,"length1":15,"length2":24}]],"length":5825,"saved":false}
{"ts":1360334599568,"patch":[[{"diffs":[[0,"(params)"],[1,", {trigger: true}"],[0,");\r\n    "]],"start1":3507,"start2":3507,"length1":16,"length2":33}]],"length":5842,"saved":false}
{"ts":1360337279437,"patch":[[{"diffs":[[0," ,title: title\r\n"],[1,"                ,buildFragment: app.router.buildFragment\r\n"],[0,"            }));"]],"start1":4646,"start2":4646,"length1":32,"length2":90}]],"length":5900,"saved":false}
{"ts":1360337457105,"patch":[[{"diffs":[[0,"       ,"],[-1,"params"],[1,"fragment"],[0," = app.r"]],"start1":3123,"start2":3123,"length1":22,"length2":24},{"diffs":[[0,"uild"],[-1,"Params("],[1,"Fragment(\"employees\", "],[0,"{sea"]],"start1":3154,"start2":3154,"length1":15,"length2":30},{"diffs":[[0,"ate("],[-1,"\"employees?\" + $.param(params)"],[1,"fragment"],[0,", {t"]],"start1":3498,"start2":3498,"length1":38,"length2":16}]],"length":5895,"saved":false}
{"ts":1360337760256,"patch":[[{"diffs":[[0,"le\r\n"],[-1,"                ,buildFragment: app.router.buildFragment\r\n"],[0,"    "]],"start1":4653,"start2":4653,"length1":66,"length2":8}]],"length":5837,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360340438990,"patch":[[{"diffs":[[0,"settings"],[1,", \"employees\""],[0,")\r\n     "]],"start1":4615,"start2":4615,"length1":16,"length2":29}]],"length":5850,"saved":false}
{"ts":1360340837499,"patch":[[{"diffs":[[0,"it: "],[-1,"2"],[1,"3"],[0,"0\r\n "]],"start1":510,"start2":510,"length1":9,"length2":9}]],"length":5850,"saved":false}
{"ts":1360340869892,"patch":[[{"diffs":[[0,"ch({"],[-1,"update: true, remove: false"],[1,"\r\n                update: true\r\n            "],[0,"});\r"]],"start1":2953,"start2":2953,"length1":35,"length2":52}]],"length":5867,"saved":false}
{"ts":1360340953350,"patch":[[{"diffs":[[0,"set || 0"],[1,"\r\n                ,button = $(e.target);\r\n            button.addClass(\"loading\")"],[0,";\r\n     "]],"start1":2848,"start2":2848,"length1":16,"length2":96},{"diffs":[[0,"date: true\r\n"],[1,"                ,success: function() {\r\n                    button.removeClass(\"loading\");\r\n                }\r\n"],[0,"            "]],"start1":3057,"start2":3057,"length1":24,"length2":135}]],"length":6058,"saved":false}
{"ts":1360341597871,"patch":[[{"diffs":[[0,"ton."],[-1,"addClass"],[1,"button"],[0,"(\"lo"]],"start1":2913,"start2":2913,"length1":16,"length2":14},{"diffs":[[0,"ton."],[-1,"removeClass(\"loading"],[1,"button(\"reset"],[0,"\");\r"]],"start1":3130,"start2":3130,"length1":28,"length2":21}]],"length":6049,"saved":false}
{"ts":1360356422888,"patch":[[{"diffs":[[0,"addRow, this);\r\n"],[1,"            util.loading(true);\r\n            this.collection.fetch({ // TODO: Need error handler\r\n                complete: function() {util.loading(false);}\r\n            });\r\n"],[0,"        }\r\n     "]],"start1":2461,"start2":2461,"length1":32,"length2":208}]],"length":6225,"saved":false}
{"ts":1360356649365,"patch":[[{"diffs":[[0,"rch\""],[-1,", \"onClearSearch\""],[0,");\r\n"]],"start1":2206,"start2":2206,"length1":25,"length2":8},{"diffs":[[0," }\r\n"],[-1,"        ,onClearSearch: function(e) {\r\n            e.preventDefault();\r\n            app.router.navigate(\"employees\" + (this.collection.settings.department !== undefined && this.collection.settings.department ? \"?department=\" + this.collection.settings.department : \"\"), {trigger: true});\r\n        }\r\n"],[0,"    "]],"start1":3896,"start2":3896,"length1":308,"length2":8}]],"length":5908,"saved":false}
{"ts":1360356662416,"patch":[[{"diffs":[[0,");\r\n"],[-1,"            //if(input) app.router.navigate(\"employees?search=\" + input + (this.collection.settings.department !== undefined && this.collection.settings.department ? \"&department=\" + this.collection.settings.department : \"\"), {trigger: true});\r\n"],[0,"    "]],"start1":3569,"start2":3569,"length1":253,"length2":8}]],"length":5663,"saved":false}
{"ts":1360358028856,"patch":[[{"diffs":[[0,"h\"\r\n"],[-1,"            ,\"click #clear-search\": \"onClearSearch\"\r\n"],[0,"    "]],"start1":2753,"start2":2753,"length1":61,"length2":8}]],"length":5610,"saved":false}
{"ts":1360358352643,"patch":[[{"diffs":[[0,"lse);}\r\n"],[1,"                ,error: function(model, xhr, options) { console.log(xhr, options); }\r\n"],[0,"        "]],"start1":2611,"start2":2611,"length1":16,"length2":102}]],"length":5696,"saved":false}
