{"ts":1361823062448,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361823064813,"patch":[[{"diffs":[[1,"window.jQuery = window.jQuery || {};\r\nwindow._ = window._ || {};\r\nwindow.Backbone = window.Backbone || {};\r\nwindow.Salaries = window.Salaries || {Models: {}, Views: {}, Collections: {}, Routers: {}};\r\nwindow.FusionTable = window.FusionTable || {};\r\nwindow.util = window.util || {};\r\n(function(window, $, _, Backbone, app, db, util) {\r\n    \r\n    app.Collections.SalaryGroups = Backbone.Collection.extend({\r\n        defaultSettings: {\r\n            fields: [\"count\", \"salarygroup\"]\r\n            ,group: true\r\n            ,orderby: \"salarygroup\"\r\n            ,dir: \"asc\"\r\n        }\r\n        ,initialize: function(models, options) {\r\n            this.settings = _.defaults(options.settings || {}, this.defaultSettings);\r\n            this.count = 0;\r\n        }\r\n        ,comparator: function(model) {\r\n            return model.get(\"salarygroup\");\r\n        }\r\n        ,sync: function(method, model, options) {\r\n            if(method !== \"read\") options.error(\"Invalid request method\");\r\n            else db.query(this.settings, options.success, options.error);\r\n        }\r\n        ,parse: function(response) {\r\n            // Convert array of arrays to array of objects with our keys/fields\r\n            var objects = [], object, i, key, self = this;\r\n            _.each(response.rows, function(row) {\r\n                object = {};\r\n                i = 0;\r\n                for(i in row) {\r\n                    key = self.settings.fields[i];\r\n                    object[key] = (key === \"salarygroup\" || key === \"count\" ? parseInt(row[i]) : row[i]);\r\n                }\r\n                objects.push(object);\r\n                \r\n                // Add to the total\r\n                self.count += object[\"count\"] || 0;\r\n            });\r\n            return objects;\r\n        }\r\n    });\r\n    \r\n    app.Views.SalaryGroupsView = Backbone.View.extend({\r\n        settings: {\r\n            bucketMinPercentage: 0\r\n            ,bucketSize: 9\r\n        }\r\n        ,initialize: function() {\r\n            this.collection = this.options.collection;\r\n            this.template = _.template($(\"#tmpl-salarygroups\").html());\r\n            this.collection.on(\"reset\", this.render, this);\r\n        }\r\n        ,render: function() {            \r\n            // Determine title\r\n            if(this.collection.settings.department === undefined) {\r\n                title = \"All Employees\";\r\n            } else if(codes !== undefined && codes.department !== undefined && codes.department[this.collection.settings.department] !== undefined) {\r\n                title = codes.department[this.collection.settings.department];\r\n            } else {\r\n                title = \"Salaries\"; // Intentionally vague\r\n            }\r\n            \r\n            this.$el.html(this.template({rows: this.collection.toJSON(), count: this.collection.count, settings: this.collection.settings, title: title, buckets: this.buildBuckets()}));\r\n            this.$(\"[rel=\\\"tooltip\\\"]\").tooltip();\r\n            return this;\r\n        }\r\n        ,buildBuckets: function() {\r\n            var totalCount = this.collection.count\r\n                ,buckets = []\r\n                ,self = this\r\n                ,percentage, salarygroup, count;\r\n            \r\n            // Loop through each salarygroup model\r\n            this.collection.each(function(model) {\r\n                count = model.get(\"count\")\r\n                percentage = Math.round(count/totalCount*100*10000)/10000;\r\n                salarygroup = model.get(\"salarygroup\");\r\n                \r\n                // If no buckets exist yet, or this bucket meets minPercentage and the previous bucket did as well\r\n                if( ! buckets.length || (percentage >= self.settings.bucketMinPercentage && buckets[buckets.length-1].percentage >= self.settings.bucketMinPercentage)) {\r\n                    buckets.push({\r\n                        percentage: percentage\r\n                        ,min: model.get(\"salarygroup\")\r\n                        ,max: model.get(\"salarygroup\") + self.settings.bucketSize\r\n                        ,count: model.get(\"count\")\r\n                    });\r\n                // Otherwise add it to the last bucket and increase the last buckets details with this one's\r\n                } else {\r\n                    buckets[buckets.length-1].percentage += percentage;\r\n                    buckets[buckets.length-1].count += count;\r\n                    buckets[buckets.length-1].max = salarygroup + self.settings.bucketSize;\r\n                }\r\n            });\r\n            return buckets;\r\n        }\r\n    });\r\n    \r\n})(window, window.jQuery, window._, window.Backbone, window.Salaries, window.FusionTable, window.util);"]],"start1":0,"start2":0,"length1":0,"length2":4632}]],"length":4632,"saved":false}
{"ts":1361823318520,"patch":[[{"diffs":[[0,"            "],[1,"//"],[0,"this.count ="]],"start1":716,"start2":716,"length1":24,"length2":26},{"diffs":[[0,"        "],[1,"/*"],[0,",compara"]],"start1":758,"start2":758,"length1":16,"length2":18},{"diffs":[[0,"up\");\r\n        }"],[-1,""],[0,""],[1,"*/"],[0,"\r\n        ,sync:"]],"start1":839,"start2":839,"length1":32,"length2":34},{"diffs":[[0,"ject"],[-1," = {};"],[1,"s.push({"],[0,"\r\n  "]],"start1":1320,"start2":1320,"length1":14,"length2":16},{"diffs":[[0,"    "],[-1,"i = 0;\r\n                for(i in row) {\r\n                    key = self.settings.fields[i];\r\n                    object[key] = (key === \"salarygroup\" || key === \"count\" ? parseInt(row[i]) "],[1,"    name: row[1]\r\n                    ,data"],[0,": "],[1,"["],[0,"row["],[-1,"i]);"],[1,"0]]"],[0,"\r\n  "]],"start1":1346,"start2":1346,"length1":206,"length2":61},{"diffs":[[0,"   }"],[-1,"\r\n                objects.push(object);\r\n                \r\n                // Add to the total\r\n                self.count += object[\"count\"] || 0"],[1,")"],[0,";\r\n "]],"start1":1418,"start2":1418,"length1":154,"length2":9}]],"length":4350,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361823498779,"patch":[[{"diffs":[[0,"late"],[-1,"({rows: this.collection.toJSON(), count: this.collection.count, settings: this.collection.settings, title: title, buckets: this.buildBuckets()}));\r\n            this.$(\"[rel=\\\"tooltip\\\"]\").tooltip();\r\n            return this;\r\n        }\r\n        ,buildBuckets: function() {\r\n            var totalCount = this.collection.count\r\n                ,buckets = []\r\n                ,self = this\r\n                ,percentage, salarygroup, count;\r\n            \r\n            // Loop through each salarygroup model\r\n            this.collection.each(function(model) {\r\n                count = model.get(\"count\")\r\n                percentage = Math.round(count/totalCount*100*10000)/10000;\r\n                salarygroup = model.get(\"salarygroup\");\r\n                \r\n                // If no buckets exist yet, or this bucket meets minPercentage and the previous bucket did as well\r\n                if( ! buckets.length || (percentage >= self.settings.bucketMinPercentage && buckets[buckets.length-1].percentage >= self.settings.bucketMinPercentage)) {\r\n                    buckets.push({\r\n                        percentage: percentage\r\n                        ,min: model.get(\"salarygroup\")\r\n                        ,max: model.get(\"salarygroup\") + self.settings.bucketSize\r\n                        ,count: model.get(\"count\")\r\n                    });\r\n                // Otherwise add it to the last bucket and increase the last buckets details with this one's\r\n                } else {\r\n                    buckets[buckets.length-1].percentage += percentage;\r\n                    buckets[buckets.length-1].count += count;\r\n                    buckets[buckets.length-1].max = salarygroup + self.settings.bucketSize;\r\n                }\r\n            });\r\n            return bucket"],[1,");\r\n            return thi"],[0,"s;\r\n"]],"start1":2450,"start2":2450,"length1":1771,"length2":34}]],"length":2613,"saved":false}
{"ts":1361823509197,"patch":[[{"diffs":[[0,"e = "],[-1,"_.template("],[0,"$(\"#"]],"start1":1766,"start2":1766,"length1":19,"length2":8},{"diffs":[[0,").html()"],[-1,")"],[0,";\r\n     "]],"start1":1792,"start2":1792,"length1":17,"length2":16},{"diffs":[[0,"s);\r\n        }\r\n"],[1,""],[0,"        ,render:"]],"start1":1859,"start2":1859,"length1":32,"length2":32},{"diffs":[[0,"() {"],[-1,"            \r\n            // Determine title\r\n            if(this.collection.settings.department === undefined) {\r\n                title = \"All Employees\";\r\n            } else if(codes !== undefined && codes.department !== undefined && codes.department[this.collection.settings.department] !== undefined) {\r\n                title = codes.department[this.collection.settings.department];\r\n            } else {\r\n                title = \"Salaries\"; // Intentionally vague\r\n            }\r\n            "],[0,"\r\n  "]],"start1":1900,"start2":1900,"length1":505,"length2":8}]],"length":2104,"saved":false}
{"ts":1361823532675,"patch":[[{"diffs":[[0,"template);\r\n"],[1,"            if(this.collection.length) this.buildChart(this.$(\".salarygroup\"));\r\n"],[0,"            "]],"start1":1937,"start2":1937,"length1":24,"length2":105},{"diffs":[[0,"is;\r\n        }\r\n"],[1,"        ,\r\n"],[0,"    });\r\n    \r\n}"]],"start1":2051,"start2":2051,"length1":32,"length2":43}]],"length":2196,"saved":false}
{"ts":1361823558548,"patch":[[{"diffs":[[0,"       ,"],[1,"buildChart: function(container) {\r\n            new Highcharts.Chart({\r\n                chart: {\r\n                    renderTo: container\r\n                    ,type: \"bar\"\r\n                    ,zoomType: \"y\"\r\n                    ,height: \"300\"\r\n                }\r\n                ,title: {\r\n                    text: \"Salary Dollars vs # of Employees per Department (Percentage of City)\"\r\n                }\r\n                ,subtitle: {\r\n                    text: document.ontouchstart === undefined ? \"Click and drag to zoom in\" : \"Drag your finger to zoom in\"\r\n                }\r\n                ,xAxis: {\r\n                    categories: [\"# of Employees\", \"Salary Dollars\"]\r\n                }\r\n                ,yAxis: {\r\n                    min: 0\r\n                    ,title: {\r\n                        text: \"Percentage of City\"\r\n                    }\r\n                }\r\n                ,tooltip: {\r\n                    formatter: function() {\r\n                        return this.series.name + \": \" + (this.key === \"Salary Dollars\" ? \"$\" : \"\") + util.formatNumber(this.y) +' ('+ Math.round(this.percentage*100)/100 +'%)';\r\n                    }\r\n                }\r\n                ,plotOptions: {\r\n                    series: {\r\n                        stacking: \"percent\"\r\n                    }\r\n                }\r\n                ,legend: { enabled: false }\r\n                ,series: series\r\n            });\r\n        }"],[0,"\r\n    })"]],"start1":2068,"start2":2068,"length1":16,"length2":1443}]],"length":3623,"saved":false}
{"ts":1361823645916,"patch":[[{"diffs":[[0,"t: \""],[-1,"3"],[1,"2"],[0,"00\"\r"]],"start1":2310,"start2":2310,"length1":9,"length2":9},{"diffs":[[0,"ary "],[-1,"Dollars vs # of Employees per Department (Percentage of City)"],[1,"Buckets"],[0,"\"\r\n "]],"start1":2396,"start2":2396,"length1":69,"length2":15},{"diffs":[[0,": [\""],[-1,"# of Employees\", \"Salary Dollars"],[1,"Salary Bucket"],[0,"\"]\r\n"]],"start1":2660,"start2":2660,"length1":40,"length2":21},{"diffs":[[0," of "],[-1,"City"],[1,"Employees"],[0,"\"\r\n "]],"start1":2827,"start2":2827,"length1":12,"length2":17},{"diffs":[[0," \": "],[1,"$"],[0,"\""],[-1," + (this.key === \"Salary Dollars\" ? \"$\" : \"\")"],[0," + u"]],"start1":3008,"start2":3008,"length1":54,"length2":10},{"diffs":[[0,"series: "],[-1,"series"],[1,"this.collection.toJSON()"],[0,"\r\n      "]],"start1":3349,"start2":3349,"length1":22,"length2":40}]],"length":3529,"saved":false}
{"ts":1361823679809,"patch":[[{"diffs":[[0,"rygroups"],[1,"2"],[0,"\").html("]],"start1":1783,"start2":1783,"length1":16,"length2":17}]],"length":3530,"saved":false}
{"ts":1361823760464,"patch":[[{"diffs":[[0,"ainer) {"],[1,"console.log(this.collection.toJSON());"],[0,"\r\n      "]],"start1":2102,"start2":2102,"length1":16,"length2":54}]],"length":3568,"saved":false}
{"ts":1361823812877,"patch":[[{"diffs":[[0,"ldChart("],[1,"\"salarygroup\");//"],[0,"this.$(\""]],"start1":1997,"start2":1997,"length1":16,"length2":33}]],"length":3585,"saved":false}
{"ts":1361823861240,"patch":[[{"diffs":[[0,"a: ["],[1,"parseInt("],[0,"row[0]"],[1,", 0)"],[0,"]\r\n "]],"start1":1392,"start2":1392,"length1":14,"length2":27}]],"length":3598,"saved":false}
{"ts":1361823983834,"patch":[[{"diffs":[[0,"      return"],[1," \"$\" +"],[0," this.series"]],"start1":3046,"start2":3046,"length1":24,"length2":30},{"diffs":[[0," + \""],[1,"k"],[0,": "],[-1,"$"],[0,"\" + "]],"start1":3081,"start2":3081,"length1":11,"length2":11}]],"length":3604,"saved":false}
{"ts":1361824127286,"patch":[[{"diffs":[[0,"cts."],[-1,"push"],[1,"unshift"],[0,"({\r\n"]],"start1":1322,"start2":1322,"length1":12,"length2":15}]],"length":3607,"saved":false}
{"ts":1361824222416,"patch":[[{"diffs":[[0,"art("],[-1,"\"salarygroup\");//"],[0,"this"]],"start1":2017,"start2":2017,"length1":25,"length2":8},{"diffs":[[0,"ygroup\")"],[1,"[0]"],[0,");\r\n    "]],"start1":2035,"start2":2035,"length1":16,"length2":19}]],"length":3593,"saved":false}
{"ts":1361824249109,"patch":[[{"diffs":[[0,"ygroup\")"],[-1,"[0]"],[1,".eq(0)"],[0,");\r\n    "]],"start1":2035,"start2":2035,"length1":19,"length2":22}]],"length":3596,"saved":false}
{"ts":1361824254298,"patch":[[{"diffs":[[0,"group\")."],[-1,"eq"],[1,"get"],[0,"(0));\r\n "]],"start1":2036,"start2":2036,"length1":18,"length2":19}]],"length":3597,"saved":false}
{"ts":1361824314157,"patch":[[{"diffs":[[0,"this.$(\""],[-1,"."],[1,"#"],[0,"salarygr"]],"start1":2021,"start2":2021,"length1":17,"length2":17}]],"length":3597,"saved":false}
{"ts":1361824320050,"patch":[[{"diffs":[[0,"this.$(\""],[-1,"#"],[1,"."],[0,"salarygr"]],"start1":2021,"start2":2021,"length1":17,"length2":17}]],"length":3597,"saved":false}
{"ts":1361824322809,"patch":[[{"diffs":[[0,"up\")"],[-1,".get(0)"],[1,"[0]"],[0,");\r\n"]],"start1":2039,"start2":2039,"length1":15,"length2":11}]],"length":3593,"saved":false}
{"ts":1361824863275,"patch":[[{"diffs":[[0,"             }\r\n"],[1,"                    ,reversed: true\r\n"],[0,"                "]],"start1":2908,"start2":2908,"length1":32,"length2":69}]],"length":3630,"saved":false}
{"ts":1361824876787,"patch":[[{"diffs":[[0,"cts."],[-1,"unshift"],[1,"push"],[0,"({\r\n"]],"start1":1322,"start2":1322,"length1":15,"length2":12}]],"length":3627,"saved":false}
{"ts":1361825066308,"patch":[[{"diffs":[[0," ,data: "],[-1,"["],[0,"parseInt"]],"start1":1387,"start2":1387,"length1":17,"length2":16},{"diffs":[[0,"w[0], 0)"],[-1,"]"],[0,"\r\n      "]],"start1":1406,"start2":1406,"length1":17,"length2":16},{"diffs":[[0,"gories: "],[-1,"["],[0,"\"Salary "]],"start1":2707,"start2":2707,"length1":17,"length2":16},{"diffs":[[0," Bucket\""],[-1,"]"],[0,"\r\n      "]],"start1":2722,"start2":2722,"length1":17,"length2":16}]],"length":3623,"saved":false}
{"ts":1361825078048,"patch":[[{"diffs":[[0," ,data: "],[1,"["],[0,"parseInt"]],"start1":1387,"start2":1387,"length1":16,"length2":17},{"diffs":[[0,"w[0], 0)"],[1,"]"],[0,"\r\n      "]],"start1":1407,"start2":1407,"length1":16,"length2":17}]],"length":3625,"saved":false}
{"ts":1361825092084,"patch":[[{"diffs":[[0,"gories: "],[1,"["],[0,"\"Salary "]],"start1":2709,"start2":2709,"length1":16,"length2":17},{"diffs":[[0," Bucket\""],[1,"]"],[0,"\r\n      "]],"start1":2725,"start2":2725,"length1":16,"length2":17}]],"length":3627,"saved":false}
{"ts":1361825515841,"patch":[[{"diffs":[[0,"   ,"],[-1,"reversed"],[1,"oppsite"],[0,": tr"]],"start1":2938,"start2":2938,"length1":16,"length2":15}]],"length":3626,"saved":false}
{"ts":1361825518985,"patch":[[{"diffs":[[0,"    ,opp"],[1,"o"],[0,"site: tr"]],"start1":2937,"start2":2937,"length1":16,"length2":17}]],"length":3627,"saved":false}
{"ts":1361825543634,"patch":[[{"diffs":[[0,"   ,"],[-1,"opposite"],[1,"reversed"],[0,": tr"]],"start1":2938,"start2":2938,"length1":16,"length2":16}]],"length":3627,"saved":false}
{"ts":1361825781953,"patch":[[{"diffs":[[0,"             }\r\n"],[1,"                    ,dataLabels: {enabled: true}\r\n"],[0,"                "]],"start1":3350,"start2":3350,"length1":32,"length2":82}]],"length":3677,"saved":false}
{"ts":1361825800852,"patch":[[{"diffs":[[0,"           ,"],[1,"bar: {"],[0,"dataLabels: "]],"start1":3375,"start2":3375,"length1":24,"length2":30},{"diffs":[[0,"d: true}"],[1,"}"],[0,"\r\n      "]],"start1":3412,"start2":3412,"length1":16,"length2":17}]],"length":3684,"saved":false}
{"ts":1361825819251,"patch":[[{"diffs":[[0," }\r\n"],[-1,"                    ,bar: {dataLabels: {enabled: true}}\r\n"],[0,"    "]],"start1":3362,"start2":3362,"length1":65,"length2":8}]],"length":3627,"saved":false}
{"ts":1361825927513,"patch":[[{"diffs":[[0,"reversed: true\r\n"],[1,"                    ,labels: {enabled: false}\r\n"],[0,"                "]],"start1":2942,"start2":2942,"length1":32,"length2":79}]],"length":3674,"saved":false}
{"ts":1361826129975,"patch":[[{"diffs":[[0,"versed: "],[-1,"tru"],[1,"fals"],[0,"e\r\n     "]],"start1":2944,"start2":2944,"length1":19,"length2":20},{"diffs":[[0,"        "],[1,"//"],[0,",labels:"]],"start1":2971,"start2":2971,"length1":16,"length2":18}]],"length":3677,"saved":false}
{"ts":1361826201930,"patch":[[{"diffs":[[0,"e: \""],[-1,"bar"],[1,"column"],[0,"\"\r\n "]],"start1":2293,"start2":2293,"length1":11,"length2":14}]],"length":3680,"saved":false}
{"ts":1361826214232,"patch":[[{"diffs":[[0,"e: \""],[-1,"column"],[1,"bar"],[0,"\"\r\n "]],"start1":2293,"start2":2293,"length1":14,"length2":11}]],"length":3677,"saved":false}
{"ts":1361826226614,"patch":[[{"diffs":[[0,"cking: \""],[-1,"percent"],[1,"normal"],[0,"\"\r\n     "]],"start1":3375,"start2":3375,"length1":23,"length2":22}]],"length":3676,"saved":false}
{"ts":1361826568248,"patch":[[{"diffs":[[0," \"200\"\r\n"],[1,"                    ,inverted: true\r\n"],[0,"        "]],"start1":2367,"start2":2367,"length1":16,"length2":53}]],"length":3713,"saved":false}
{"ts":1361826583562,"patch":[[{"diffs":[[0,"g: \""],[-1,"normal"],[1,"percent"],[0,"\"\r\n "]],"start1":3416,"start2":3416,"length1":14,"length2":15}]],"length":3714,"saved":false}
{"ts":1361826597367,"patch":[[{"diffs":[[0,"verted: "],[-1,"tru"],[1,"fals"],[0,"e\r\n     "]],"start1":2398,"start2":2398,"length1":19,"length2":20}]],"length":3715,"saved":false}
{"ts":1361826607082,"patch":[[{"diffs":[[0,"0\"\r\n"],[-1,"                    ,inverted: false\r\n"],[0,"    "]],"start1":2371,"start2":2371,"length1":46,"length2":8}]],"length":3677,"saved":false}
{"ts":1361826981132,"patch":[[{"diffs":[[0," }\r\n"],[-1,"                    ,reversed: false\r\n                    //,labels: {enabled: false}\r\n"],[0,"    "]],"start1":2917,"start2":2917,"length1":95,"length2":8}]],"length":3590,"saved":false}
{"ts":1361826992221,"patch":[[{"diffs":[[0,"             }\r\n"],[1,"                    ,reversed: true\r\n                    ,labels: {enabled: false}\r\n"],[0,"                "]],"start1":2905,"start2":2905,"length1":32,"length2":116}]],"length":3674,"saved":false}
{"ts":1361827264204,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,",reverse"]],"start1":2933,"start2":2933,"length1":16,"length2":18},{"diffs":[[0,"        "],[1,"//"],[0,",labels:"]],"start1":2972,"start2":2972,"length1":16,"length2":18}]],"length":3678,"saved":false}
{"ts":1361827308411,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,",reverse"]],"start1":2933,"start2":2933,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,",labels:"]],"start1":2970,"start2":2970,"length1":18,"length2":16}]],"length":3674,"saved":false}
{"ts":1361827344292,"patch":[[{"diffs":[[0,"cts."],[-1,"push"],[1,"unshift"],[0,"({\r\n"]],"start1":1322,"start2":1322,"length1":12,"length2":15},{"diffs":[[0,"        "],[1,"//"],[0,",reverse"]],"start1":2936,"start2":2936,"length1":16,"length2":18},{"diffs":[[0,"        "],[1,"//"],[0,",labels:"]],"start1":2975,"start2":2975,"length1":16,"length2":18}]],"length":3681,"saved":false}
{"ts":1361827489218,"patch":[[{"diffs":[[0,"cts."],[-1,"unshift"],[1,"push"],[0,"({\r\n"]],"start1":1322,"start2":1322,"length1":15,"length2":12}]],"length":3678,"saved":false}
{"ts":1361827922513,"patch":[[{"diffs":[[0,"eight: \""],[-1,"2"],[1,"1"],[0,"00\"\r\n   "]],"start1":2361,"start2":2361,"length1":17,"length2":17}]],"length":3678,"saved":false}
{"ts":1361827939649,"patch":[[{"diffs":[[0,"ight: \"1"],[-1,"0"],[1,"5"],[0,"0\"\r\n    "]],"start1":2362,"start2":2362,"length1":17,"length2":17}]],"length":3678,"saved":false}
{"ts":1361827967533,"patch":[[{"diffs":[[0,"t: \""],[-1,"15"],[1,"20"],[0,"0\"\r\n"]],"start1":2365,"start2":2365,"length1":10,"length2":10}]],"length":3678,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361887101507,"patch":[[{"diffs":[[0,"{};\r\nwindow."],[-1,""],[0,""],[1,"Highcharts = window.Highcharts || {};\r\nwindow."],[0,"Salaries = w"]],"start1":103,"start2":103,"length1":24,"length2":70},{"diffs":[[0,"ckbone, "],[-1,""],[0,""],[1,"Highcharts, "],[0,"app, db,"]],"start1":355,"start2":355,"length1":16,"length2":28},{"diffs":[[0,"    "],[-1,"/*"],[0,""],[1,""],[0,",com"]],"start1":820,"start2":820,"length1":10,"length2":8},{"diffs":[[0,"   }"],[-1,"*/"],[0,""],[1,""],[0,"\r\n  "]],"start1":907,"start2":907,"length1":10,"length2":8},{"diffs":[[0,"ject"],[-1,"s.push({"],[1," = {};"],[0,"\r\n  "]],"start1":1374,"start2":1374,"length1":16,"length2":14},{"diffs":[[0,"    "],[-1,"    name: row[1]"],[1,"i = 0;\r\n                for(i in row) {\r\n                    key = self.settings.fields[i];"],[0,"\r\n  "]],"start1":1398,"start2":1398,"length1":24,"length2":99},{"diffs":[[0,"    "],[-1,",data: ["],[1,"object[key] = "],[0,"pars"]],"start1":1511,"start2":1511,"length1":16,"length2":22},{"diffs":[[0,"row["],[-1,"0"],[1,"i"],[0,"], 0)"],[-1,"]"],[1,";"],[0,"\r\n  "]],"start1":1538,"start2":1538,"length1":15,"length2":15},{"diffs":[[0,"               }"],[-1,")"],[1,"\r\n                objects.push(object);\r\n                \r\n                // Add to the total\r\n                self.count += object.count || 0"],[0,";\r\n            }"]],"start1":1552,"start2":1552,"length1":33,"length2":175},{"diffs":[[0,"r) {"],[-1,"console.log(this.collection.toJSON()"],[1,"\r\n            var keyvals = {}, series = [], i\r\n                ,lastModel = this.collection.at(this.collection.length - 1) // Last model in sorted collection\r\n                ,highestSalaryGroup = lastModel.get(\"salarygroup\");\r\n            this.collection.each(function(row) {\r\n                keyvals[row.get(\"salarygroup\")] = row.get(\"count\");\r\n            });\r\n            //for(i = highestSalaryGroup; i >= 0; i - 10) {\r\n            //    if(keyvals[i] === undefined) keyvals[i] = 0;\r\n            //}\r\n            console.log(keyvals);\r\n            _.each(keyvals, function(val, key) {\r\n               series.push({\r\n                   name: key//row.get(\"salarygroup\")\r\n                   ,data: val//[row.get(\"count\")]\r\n               });\r\n            }"],[0,");\r\n"]],"start1":2397,"start2":2397,"length1":44,"length2":768},{"diffs":[[0,"es: "],[-1,"this.collection.toJSON()"],[1,"series"],[0,"\r\n  "]],"start1":4501,"start2":4501,"length1":32,"length2":14},{"diffs":[[0,"ackbone,"],[1," window.Highcharts,"],[0," window."]],"start1":4600,"start2":4600,"length1":16,"length2":35}]],"length":4678,"saved":false}
{"ts":1361887149287,"patch":[[{"diffs":[[0,"\n            });"],[1,"console.log(series);"],[0,"\r\n            ne"]],"start1":3147,"start2":3147,"length1":32,"length2":52}]],"length":4698,"saved":false}
{"ts":1361887160651,"patch":[[{"diffs":[[0," ,data: "],[1,"["],[0,"val"],[1,"]"],[0,"//[row.g"]],"start1":3095,"start2":3095,"length1":19,"length2":21}]],"length":4700,"saved":false}
{"ts":1361887175154,"patch":[[{"diffs":[[0,"(keyvals"],[1,", highestSalaryGroup"],[0,");\r\n    "]],"start1":2931,"start2":2931,"length1":16,"length2":36},{"diffs":[[0," });"],[-1,"console.log(series);"],[0,"\r\n  "]],"start1":3181,"start2":3181,"length1":28,"length2":8}]],"length":4700,"saved":false}
{"ts":1361887230631,"patch":[[{"diffs":[[0,"], i"],[-1,"\r\n                ,lastModel = this.collection.at(this.collection.length - 1) // Last model in sorted collection\r\n                ,highestSalaryGroup = lastModel.get(\"salarygroup\");\r\n            this.collection.each(function(row) {\r\n                keyvals[row.get(\"salarygroup\")] = row.get(\"count\");"],[1,", highestSalaryGroup;\r\n            this.collection.each(function(row) {\r\n                keyvals[row.get(\"salarygroup\")] = row.get(\"count\");\r\n                highestSalaryGroup = row.get(\"salarygroup\"); // Will keep getting updated until the last record"],[0,"\r\n  "]],"start1":2443,"start2":2443,"length1":308,"length2":261}]],"length":4653,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361887323474,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"for(i = "]],"start1":2723,"start2":2723,"length1":18,"length2":16},{"diffs":[[0,"= 0; i -"],[1,"="],[0," 10) {\r\n"]],"start1":2762,"start2":2762,"length1":16,"length2":17},{"diffs":[[0,"        "],[-1,"//"],[0,"    if(k"]],"start1":2783,"start2":2783,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,"}\r\n     "]],"start1":2845,"start2":2845,"length1":18,"length2":16}]],"length":4648,"saved":false}
{"ts":1361887488636,"patch":[[{"diffs":[[0,"({\r\n"],[-1,"        settings: {\r\n            bucketMinPercentage: 0\r\n            ,bucketSize: 9\r\n        }\r\n"],[0,"    "]],"start1":1839,"start2":1839,"length1":104,"length2":8}]],"length":4552,"saved":false}
{"ts":1361887617739,"patch":[[{"diffs":[[0,"t record"],[1," (only works since it's a sorted collection)"],[0,"\r\n      "]],"start1":2596,"start2":2596,"length1":16,"length2":60}]],"length":4596,"saved":false}
{"ts":1361887712114,"patch":[[{"diffs":[[0,"Group;\r\n"],[1,"            \r\n            // Reformat data to key/value object {salarygroup: count, ...}\r\n"],[0,"        "]],"start1":2366,"start2":2366,"length1":16,"length2":106},{"diffs":[[0,"unction(row) {\r\n"],[-1,""],[0,"                "]],"start1":2498,"start2":2498,"length1":32,"length2":32},{"diffs":[[0,"           });\r\n"],[1,"            \r\n            // From the highest salary group, work backwards every salary group and make sure a row exists for it\r\n"],[0,"            for("]],"start1":2741,"start2":2741,"length1":32,"length2":161},{"diffs":[[0,"    "],[-1,"console.log(keyvals, highestSalaryGroup);"],[1,"\r\n            // Prepare data for Highcharts"],[0,"\r\n  "]],"start1":3031,"start2":3031,"length1":49,"length2":52},{"diffs":[[0," key"],[-1,"//row.get(\"salarygroup\")"],[0,"\r\n  "]],"start1":3185,"start2":3185,"length1":32,"length2":8},{"diffs":[[0,"val]"],[-1,"//[row.get(\"count\")]"],[0,"\r\n  "]],"start1":3218,"start2":3218,"length1":28,"length2":8}]],"length":4774,"saved":false}
{"ts":1361887746866,"patch":[[{"diffs":[[0,"        "],[1,"\r\n            // Render chart\r\n            this.chart = "],[0,"new High"]],"start1":3265,"start2":3265,"length1":16,"length2":72}]],"length":4830,"saved":false}
{"ts":1361887777660,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,",reverse"]],"start1":4084,"start2":4084,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,",labels:"]],"start1":4121,"start2":4121,"length1":18,"length2":16}]],"length":4826,"saved":false}
{"ts":1361887792841,"patch":[[{"diffs":[[0,"tend({\r\n        "],[-1,","],[0,"initialize: func"]],"start1":1835,"start2":1835,"length1":33,"length2":32}]],"length":4825,"saved":false}
{"ts":1361887882011,"patch":[[{"diffs":[[0,"s.name +"],[1," \"-\" + (this.series.name + 9) +"],[0," \"k: \" +"]],"start1":4295,"start2":4295,"length1":16,"length2":47},{"diffs":[[0,"tage"],[-1,"*100)/100"],[1,")"],[0," +'%"]],"start1":4398,"start2":4398,"length1":17,"length2":9}]],"length":4848,"saved":false}
{"ts":1361887896257,"patch":[[{"diffs":[[0,"+ \"-\" + "],[1,"(parseInt"],[0,"(this.se"]],"start1":4302,"start2":4302,"length1":16,"length2":25},{"diffs":[[0,"ies.name"],[1,", 0)"],[0," + 9) + "]],"start1":4328,"start2":4328,"length1":16,"length2":20}]],"length":4861,"saved":false}
{"ts":1361887924019,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,",labels:"]],"start1":4120,"start2":4120,"length1":16,"length2":18}]],"length":4863,"saved":false}
{"ts":1361889976458,"patch":[[{"diffs":[[0,"series: "],[-1,"serie"],[1,"keyval"],[0,"s\r\n     "]],"start1":4682,"start2":4682,"length1":21,"length2":22}]],"length":4864,"saved":false}
{"ts":1361889999340,"patch":[[{"diffs":[[0,"up\")] = "],[1,"["],[0,"row.get("]],"start1":2555,"start2":2555,"length1":16,"length2":17},{"diffs":[[0,"\"count\")"],[1,"]"],[0,";\r\n     "]],"start1":2572,"start2":2572,"length1":16,"length2":17},{"diffs":[[0,"ls[i] = "],[-1,"0"],[1,"[0]"],[0,";\r\n     "]],"start1":2997,"start2":2997,"length1":17,"length2":19}]],"length":4868,"saved":false}
{"ts":1361890012146,"patch":[[{"diffs":[[0,"\n            });"],[1,"console.log(keyvals);"],[0,"\r\n            \r\n"]],"start1":3246,"start2":3246,"length1":32,"length2":53}]],"length":4889,"saved":false}
{"ts":1361890103297,"patch":[[{"diffs":[[0,"up\")] = "],[-1,"["],[0,"row.get("]],"start1":2555,"start2":2555,"length1":17,"length2":16},{"diffs":[[0,"\"count\")"],[-1,"]"],[0,";\r\n     "]],"start1":2571,"start2":2571,"length1":17,"length2":16},{"diffs":[[0,"ls[i] = "],[-1,"[0]"],[1,"0"],[0,";\r\n     "]],"start1":2995,"start2":2995,"length1":19,"length2":17},{"diffs":[[0," });"],[-1,"console.log(keyvals);"],[0,"\r\n  "]],"start1":3254,"start2":3254,"length1":29,"length2":8},{"diffs":[[0,"series: "],[-1,"keyval"],[1,"serie"],[0,"s\r\n     "]],"start1":4682,"start2":4682,"length1":22,"length2":21}]],"length":4863,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362254043553,"patch":[[{"diffs":[[0,"             }\r\n"],[1,"                    ,labels: { step: 5 }\r\n"],[0,"                "]],"start1":4055,"start2":4055,"length1":32,"length2":74}]],"length":4905,"saved":false}
{"ts":1362254064540,"patch":[[{"diffs":[[0,"ep: "],[-1,"5"],[1,"10"],[0," }\r\n"]],"start1":4104,"start2":4104,"length1":9,"length2":10}]],"length":4906,"saved":false}
{"ts":1362254128308,"patch":[[{"diffs":[[0,"s: {"],[-1," step: 10"],[1,"\r\n                        step: 10\r\n                        ,formatter: function() {\r\n                            return Math.abs(this.value - 100);\r\n                        }\r\n                   "],[0," }\r\n"]],"start1":4097,"start2":4097,"length1":17,"length2":204}]],"length":5093,"saved":false}
{"ts":1362254138580,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"step: 10"]],"start1":4119,"start2":4119,"length1":16,"length2":18},{"diffs":[[0,"        "],[-1,","],[0,"formatte"]],"start1":4155,"start2":4155,"length1":17,"length2":16}]],"length":5094,"saved":false}
{"ts":1362254150403,"patch":[[{"diffs":[[0,"e - 100)"],[1," + \"%\""],[0,";\r\n     "]],"start1":4241,"start2":4241,"length1":16,"length2":22}]],"length":5100,"saved":false}
{"ts":1362254311416,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"step: 10"]],"start1":4119,"start2":4119,"length1":18,"length2":16},{"diffs":[[0,"                "],[1,","],[0,"formatter: funct"]],"start1":4145,"start2":4145,"length1":32,"length2":33}]],"length":5099,"saved":false}
{"ts":1362254380448,"patch":[[{"diffs":[[0,"  step: "],[-1,"1"],[0,"0\r\n     "]],"start1":4125,"start2":4125,"length1":17,"length2":16}]],"length":5098,"saved":false}
{"ts":1362254493578,"patch":[[{"diffs":[[0,"  step: "],[-1,"0"],[1,"11"],[0,"\r\n      "]],"start1":4125,"start2":4125,"length1":17,"length2":18}]],"length":5099,"saved":false}
{"ts":1362254597119,"patch":[[{"diffs":[[0,"    "],[-1,"step: 11"],[1,"tickInterval: 5"],[0,"\r\n  "]],"start1":4123,"start2":4123,"length1":16,"length2":23}]],"length":5106,"saved":false}
{"ts":1362254619810,"patch":[[{"diffs":[[0,"       ,"],[-1,"labels: {"],[1,"tickInterval: 5"],[0,"\r\n      "]],"start1":4084,"start2":4084,"length1":25,"length2":31},{"diffs":[[0,"    "],[-1,"    tickInterval: 5"],[1,",labels: {"],[0,"\r\n  "]],"start1":4125,"start2":4125,"length1":27,"length2":18},{"diffs":[[0,"        "],[-1,","],[0,"formatte"]],"start1":4157,"start2":4157,"length1":17,"length2":16}]],"length":5102,"saved":false}
{"ts":1362254632664,"patch":[[{"diffs":[[0,"erval: 5"],[1,"0"],[0,"\r\n      "]],"start1":4099,"start2":4099,"length1":16,"length2":17}]],"length":5103,"saved":false}
{"ts":1362254705331,"patch":[[{"diffs":[[0,"tick"],[-1,"Interval"],[1,"Positions"],[0,": "],[1,"["],[0,"50"],[1,"]"],[0,"\r\n  "]],"start1":4092,"start2":4092,"length1":20,"length2":23}]],"length":5106,"saved":false}
{"ts":1362254715456,"patch":[[{"diffs":[[0,"ons: [50"],[1,", 100"],[0,"]\r\n     "]],"start1":4102,"start2":4102,"length1":16,"length2":21}]],"length":5111,"saved":false}
{"ts":1362254720990,"patch":[[{"diffs":[[0,"tions: ["],[1,"0, "],[0,"50, 100]"]],"start1":4100,"start2":4100,"length1":16,"length2":19}]],"length":5114,"saved":false}
{"ts":1362254751643,"patch":[[{"diffs":[[0," }\r\n"],[-1,"                    ,tickPositions: [0, 50, 100]\r\n"],[0,"    "]],"start1":4067,"start2":4067,"length1":58,"length2":8}]],"length":5064,"saved":false}
{"ts":1362254817727,"patch":[[{"diffs":[[0," \"200\"\r\n"],[1,"                    ,backgroundColor: \"inherit\"\r\n"],[0,"        "]],"start1":3517,"start2":3517,"length1":16,"length2":65}]],"length":5113,"saved":false}
{"ts":1362254853161,"patch":[[{"diffs":[[0,"r: \""],[-1,"inherit"],[1,"rgba(255, 255, 255, 0.1)"],[0,"\"\r\n "]],"start1":3560,"start2":3560,"length1":15,"length2":32}]],"length":5130,"saved":false}
