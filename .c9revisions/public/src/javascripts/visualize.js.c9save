{"ts":1362330585467,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1362330599617,"patch":[[{"diffs":[[1,"window.jQuery = window.jQuery || {};\r\nwindow._ = window._ || {};\r\nwindow.Backbone = window.Backbone || {};\r\nwindow.Highcharts = window.Highcharts || {};\r\nwindow.Salaries = window.Salaries || {Models: {}, Views: {}, Collections: {}, Routers: {}};\r\nwindow.FusionTable = window.FusionTable || {};\r\nwindow.util = window.util || {};\r\n(function(window, $, _, Backbone, Highcharts, app, db, util) {\r\n    \r\n    \r\n    \r\n})(window, window.jQuery, window._, window.Backbone, window.Highcharts, window.Salaries, window.FusionTable, window.util);"]],"start1":0,"start2":0,"length1":0,"length2":533}]],"length":533,"saved":false}
{"ts":1362330645463,"patch":[[{"diffs":[[0,"\r\n    \r\n    "],[1,"app.Views.VisualizeView = Backbone.View.extend({\r\n       initialize: function() {\r\n           this.template = _.template($(\"#tmpl-visualize\").html());\r\n       } \r\n    });"],[0,"\r\n    \r\n})(w"]],"start1":391,"start2":391,"length1":24,"length2":194}]],"length":703,"saved":false}
{"ts":1362330792126,"patch":[[{"diffs":[[0,"       }"],[-1," "],[1,"\r\n       ,render: function() {\r\n           this.$el.html(this.template());\r\n           return this;\r\n       }"],[0,"\r\n    })"]],"start1":555,"start2":555,"length1":17,"length2":125}]],"length":811,"saved":false}
{"ts":1362330998478,"patch":[[{"diffs":[[0,").html());\r\n"],[1,"            this.collection.on(\"reset\", this.onReset, this);\r\n            util.loading(true);\r\n            this.collection.fetch({ // TODO: Need error handler\r\n                complete: function() {util.loading(false);}              \r\n            });\r\n"],[0,"       }\r\n  "]],"start1":543,"start2":543,"length1":24,"length2":276}]],"length":1063,"saved":false}
{"ts":1362331067302,"patch":[[{"diffs":[[0,"his."],[-1,"onReset"],[1,"render"],[0,", th"]],"start1":596,"start2":596,"length1":15,"length2":14}]],"length":1062,"saved":false}
{"ts":1362331140923,"patch":[[{"diffs":[[0,"\r\n    \r\n"],[1,"    app.Views.Visualize = app.Views.Visualize || {};\r\n    \r\n    app.Views.Visualize.SizeVsDollarsBar = Backbone.View.extend({\r\n        \r\n    });\r\n    \r\n"],[0,"})(windo"]],"start1":932,"start2":932,"length1":16,"length2":168}]],"length":1214,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362331184976,"patch":[[{"diffs":[[0,"({\r\n        "],[1,"render: function() {\r\n            var series = [];\r\n            this.collection.each(function(row) {\r\n                series.push({\r\n                    name: row.get(\"department\")\r\n                    ,data: [row.get(\"count\"), row.get(\"salaries\")]\r\n                });\r\n            });\r\n            this.chart = new Highcharts.Chart({\r\n                chart: {\r\n                    renderTo: container\r\n                    ,type: \"bar\"\r\n                    ,zoomType: \"y\"\r\n                    ,height: \"300\"\r\n                    ,backgroundColor: \"rgba(255, 255, 255, 0.1)\"\r\n                }\r\n                ,title: {\r\n                    text: \"Salary Dollars vs # of Employees per Department (Percentage of City)\"\r\n                }\r\n                ,subtitle: {\r\n                    text: document.ontouchstart === undefined ? \"Click and drag to zoom in\" : \"Drag your finger to zoom in\"\r\n                }\r\n                ,xAxis: {\r\n                    categories: [\"# of Employees\", \"Salary Dollars\"]\r\n                }\r\n                ,yAxis: {\r\n                    min: 0\r\n                    ,title: {\r\n                        text: \"Percentage of City\"\r\n                    }\r\n                }\r\n                ,tooltip: {\r\n                    formatter: function() {\r\n                        return this.series.name + \": \" + (this.key === \"Salary Dollars\" ? \"$\" : \"\") + util.formatNumber(this.y) +' ('+ Math.round(this.percentage*100)/100 +'%)';\r\n                    }\r\n                }\r\n                ,plotOptions: {\r\n                    series: {\r\n                        stacking: \"percent\"\r\n                    }\r\n                }\r\n                ,legend: { enabled: false }\r\n                ,series: series\r\n            });\r\n        }"],[0,"\r\n    });\r\n "]],"start1":1063,"start2":1063,"length1":24,"length2":1783}]],"length":2973,"saved":false}
{"ts":1362331192507,"patch":[[{"diffs":[[0,"To: "],[-1,"container"],[1,"this.el"],[0,"\r\n  "]],"start1":1464,"start2":1464,"length1":17,"length2":15}]],"length":2971,"saved":false}
{"ts":1362331292953,"patch":[[{"diffs":[[0,"\n           "],[1," "],[0,"this.templat"]],"start1":485,"start2":485,"length1":24,"length2":25}]],"length":2972,"saved":false}
{"ts":1362331631084,"patch":[[{"diffs":[[0,"Visualiz"],[-1,"e"],[1,"ations"],[0," = app.V"]],"start1":955,"start2":955,"length1":17,"length2":22},{"diffs":[[0,"Visualiz"],[-1,"e"],[1,"ations"],[0," || {};\r"]],"start1":982,"start2":982,"length1":17,"length2":22},{"diffs":[[0,"Visualiz"],[-1,"e"],[1,"ations"],[0,".SizeVsD"]],"start1":1025,"start2":1025,"length1":17,"length2":22}]],"length":2987,"saved":false}
{"ts":1362331673047,"patch":[[{"diffs":[[0,"\n       "],[1," "],[0,"initiali"]],"start1":452,"start2":452,"length1":16,"length2":17},{"diffs":[[0,": function() {\r\n"],[-1,""],[0,"            this"]],"start1":471,"start2":471,"length1":32,"length2":32},{"diffs":[[0,"});\r\n       "],[1," "],[0,"}\r\n"],[1," "],[0,"       ,rend"]],"start1":803,"start2":803,"length1":27,"length2":29},{"diffs":[[0," this;\r\n"],[1," "],[0,"       }"]],"start1":911,"start2":911,"length1":16,"length2":17},{"diffs":[[0,"is;\r\n        }\r\n"],[-1,""],[0,"    });\r\n    \r\n "]],"start1":914,"start2":914,"length1":32,"length2":32},{"diffs":[[0,"tend({\r\n"],[-1,""],[0,"        "],[1,"initialize: function() {\r\n            this.collection.on(\"reset\", this.render, this);\r\n            util.loading(true);\r\n            this.collection.fetch({ // TODO: Need error handler\r\n                complete: function() {util.loading(false);}              \r\n            });\r\n        }\r\n        ,"],[0,"render: "]],"start1":1079,"start2":1079,"length1":24,"length2":321}]],"length":3288,"saved":false}
{"ts":1362331684999,"patch":[[{"diffs":[[0,");\r\n"],[-1,"            this.collection.on(\"reset\", this.render, this);\r\n            util.loading(true);\r\n            this.collection.fetch({ // TODO: Need error handler\r\n                complete: function() {util.loading(false);}              \r\n            });\r\n"],[0,"    "]],"start1":553,"start2":553,"length1":259,"length2":8}]],"length":3037,"saved":false}
{"ts":1362331731994,"patch":[[{"diffs":[[0,").html());\r\n"],[1,"            this.chart = new app.Views.Visualizations.SizeVsDollarsBar({collection: this.collection});\r\n"],[0,"        }\r\n "]],"start1":545,"start2":545,"length1":24,"length2":128}]],"length":3141,"saved":false}
{"ts":1362331762298,"patch":[[{"diffs":[[0,"mplate());\r\n"],[1,"           this.$(\".charts\").append(this.chart.el);\r\n"],[0,"           r"]],"start1":735,"start2":735,"length1":24,"length2":77}]],"length":3194,"saved":false}
{"ts":1362331772208,"patch":[[{"diffs":[[0,"(\".chart"],[-1,"s"],[0,"\").appen"]],"start1":764,"start2":764,"length1":17,"length2":16}]],"length":3193,"saved":false}
{"ts":1362331813912,"patch":[[{"diffs":[[0,"t = "],[-1,"new app.Views.Visualizations.SizeVsDollarsBar({collection: this.collection})"],[1,"this.options.chart"],[0,";\r\n "]],"start1":578,"start2":578,"length1":84,"length2":26},{"diffs":[[0,"\r\n          "],[1," if(this.chart)"],[0," this.$(\".ch"]],"start1":687,"start2":687,"length1":24,"length2":39}]],"length":3150,"saved":false}
{"ts":1362331823448,"patch":[[{"diffs":[[0,");\r\n"],[-1,"            this.chart = this.options.chart;\r\n"],[0,"    "]],"start1":553,"start2":553,"length1":54,"length2":8},{"diffs":[[0,"    if(this."],[1,"options."],[0,"chart) this."]],"start1":650,"start2":650,"length1":24,"length2":32},{"diffs":[[0,"append(this."],[1,"options."],[0,"chart.el);\r\n"]],"start1":694,"start2":694,"length1":24,"length2":32}]],"length":3120,"saved":false}
{"ts":1362331905199,"patch":[[{"diffs":[[0,"p.Views."],[-1,"Visualization"],[1,"Chart"],[0,"s = app."]],"start1":783,"start2":783,"length1":29,"length2":21},{"diffs":[[0,"p.Views."],[-1,"Visualization"],[1,"Chart"],[0,"s || {};"]],"start1":802,"start2":802,"length1":29,"length2":21},{"diffs":[[0,"ews."],[-1,"Visualization"],[1,"Chart"],[0,"s.Si"]],"start1":841,"start2":841,"length1":21,"length2":13}]],"length":3096,"saved":false}
{"ts":1362332142988,"patch":[[{"diffs":[[0,").html());\r\n"],[1,"            \r\n            // For salary groups, a collection is passed\r\n            if(this.collection !== undefined) {\r\n                this.collection.on(\"reset\", this.render, this);\r\n                util.loading(true);\r\n                this.collection.fetch({ // TODO: Need error handler\r\n                    complete: function() {util.loading(false);}              \r\n                });\r\n            }\r\n"],[0,"        }\r\n "]],"start1":545,"start2":545,"length1":24,"length2":431},{"diffs":[[0,"emplate("],[1,"{departments: this.collection.toJSON();}"],[0,"));\r\n   "]],"start1":1037,"start2":1037,"length1":16,"length2":56}]],"length":3543,"saved":false}
{"ts":1362332152968,"patch":[[{"diffs":[[0,"toJSON()"],[-1,";"],[0,"}));\r\n  "]],"start1":1075,"start2":1075,"length1":17,"length2":16}]],"length":3542,"saved":false}
{"ts":1362332197515,"patch":[[{"diffs":[[0,"    "],[-1,"this.$el.html(this.template({departments: this.collection.toJSON()}"],[1," var data = this.collection !== undefined ? {departments: this.collection.toJSON()} : {};\r\n            this.$el.html(this.template(data"],[0,"));\r\n"],[1," "],[0,"    "]],"start1":1013,"start2":1013,"length1":80,"length2":149},{"diffs":[[0,"chart.el);\r\n"],[1," "],[0,"           r"]],"start1":1229,"start2":1229,"length1":24,"length2":25}]],"length":3612,"saved":false}
{"ts":1362332370933,"patch":[[{"diffs":[[0,"  }\r\n        }\r\n"],[1,"        ,events: {\r\n            \"click .department\": \"toggleDepartment\"\r\n        }\r\n"],[0,"        ,render:"]],"start1":959,"start2":959,"length1":32,"length2":116},{"diffs":[[0,"is;\r\n        }\r\n"],[1,"        ,toggleDepartment: function(e) {\r\n            e.preventDefault();\r\n            var departmentid = $(e.currentTarget).data(\"value\")\r\n                ,title = $(e.currentTarget).text();\r\n            \r\n        }\r\n"],[0,"    });\r\n    \r\n "]],"start1":1346,"start2":1346,"length1":32,"length2":250}]],"length":3914,"saved":false}
{"ts":1362332518205,"patch":[[{"diffs":[[0,");\r\n            "],[1,"this.charts = this.charts || {};\r\n            if(this.charts[departmentid] !== undefined) {\r\n                this.charts[departmentid].$el.toggle();\r\n            } else {\r\n                this.charts[departmentid] = new app.Views.Charts.SalaryGroup({collection: new app.Collections.SalaryGroups()});\r\n                this.$(\".chart\").append(this.charts[departmentid].el);\r\n            }"],[0,"\r\n        }\r\n   "]],"start1":1551,"start2":1551,"length1":32,"length2":418}]],"length":4300,"saved":false}
{"ts":1362332551064,"patch":[[{"diffs":[[0,"yGroups("],[1,"null, {settings: {department: departmentid}}"],[0,")});\r\n  "]],"start1":1854,"start2":1854,"length1":16,"length2":60}]],"length":4344,"saved":false}
{"ts":1362332560127,"patch":[[{"diffs":[[0,"tmentid}"],[1,", title: title"],[0,"})});\r\n "]],"start1":1897,"start2":1897,"length1":16,"length2":30}]],"length":4358,"saved":false}
{"ts":1362332603927,"patch":[[{"diffs":[[0,"yGroup({"],[1,"\r\n                    "],[0,"collecti"]],"start1":1809,"start2":1809,"length1":16,"length2":38},{"diffs":[[0,"tid}"],[-1,", title: title})"],[1,")\r\n                    ,title: title\r\n                "],[0,"});\r"]],"start1":1923,"start2":1923,"length1":24,"length2":62}]],"length":4418,"saved":false}
{"ts":1362332616845,"patch":[[{"diffs":[[0,"tmentid}"],[1,"}"],[0,")\r\n     "]],"start1":1919,"start2":1919,"length1":16,"length2":17}]],"length":4419,"saved":false}
{"ts":1362332665558,"patch":[[{"diffs":[[0,"\r\n    \r\n"],[1,"    app.Collections.SalaryGroups = Backbone.Collection.extend({\r\n        defaultSettings: {\r\n            fields: [\"count\", \"salarygroup\"]\r\n            ,group: true\r\n            ,orderby: \"salarygroup\"\r\n            ,dir: \"asc\"\r\n        }\r\n        ,initialize: function(models, options) {\r\n            this.settings = _.defaults(options.settings || {}, this.defaultSettings);\r\n            //this.count = 0;\r\n        }\r\n        ,comparator: function(model) {\r\n            return model.get(\"salarygroup\");\r\n        }\r\n        ,sync: function(method, model, options) {\r\n            if(method !== \"read\") options.error(\"Invalid request method\");\r\n            else db.query(this.settings, options.success, options.error);\r\n        }\r\n        ,parse: function(response) {\r\n            // Convert array of arrays to array of objects with our keys/fields\r\n            var objects = [], object, i, key, self = this;\r\n            _.each(response.rows, function(row) {\r\n                object = {};\r\n                i = 0;\r\n                for(i in row) {\r\n                    key = self.settings.fields[i];\r\n                    object[key] = parseInt(row[i], 0);\r\n                }\r\n                objects.push(object);\r\n                \r\n                // Add to the total\r\n                self.count += object.count || 0;\r\n            });\r\n            return objects;\r\n        }\r\n    });\r\n    \r\n"],[0,"})(windo"]],"start1":4289,"start2":4289,"length1":16,"length2":1403}]],"length":5806,"saved":false}
{"ts":1362332725481,"patch":[[{"diffs":[[0,"\r\n    \r\n"],[1,"    app.Views.Charts.SalaryGroup = Backbone.View.extend({\r\n        initialize: function() {\r\n            this.collection.on(\"reset\", this.render, this);\r\n            util.loading(true);\r\n            this.collection.fetch({ // TODO: Need error handler\r\n                complete: function() {util.loading(false);}              \r\n            });\r\n        }\r\n        ,render: function() {\r\n            var keyvals = {}, series = [], i, highestSalaryGroup;\r\n            \r\n            // Reformat data to key/value object {salarygroup: count, ...}\r\n            this.collection.each(function(row) {\r\n                keyvals[row.get(\"salarygroup\")] = row.get(\"count\");\r\n                highestSalaryGroup = row.get(\"salarygroup\"); // Will keep getting updated until the last record (only works since it's a sorted collection)\r\n            });\r\n            \r\n            // From the highest salary group, work backwards every salary group and make sure a row exists for it\r\n            for(i = highestSalaryGroup; i >= 0; i -= 10) {\r\n                if(keyvals[i] === undefined) keyvals[i] = 0;\r\n            }\r\n            \r\n            // Prepare data for Highcharts\r\n            _.each(keyvals, function(val, key) {\r\n               series.push({\r\n                   name: key\r\n                   ,data: [val]\r\n               });\r\n            });\r\n            \r\n            // Render chart\r\n            this.chart = new Highcharts.Chart({\r\n                chart: {\r\n                    renderTo: this.el\r\n                    ,type: \"bar\"\r\n                    ,zoomType: \"y\"\r\n                    ,height: \"200\"\r\n                    ,backgroundColor: \"rgba(255, 255, 255, 0.1)\"\r\n                }\r\n                ,title: {\r\n                    text: this.options.title\r\n                }\r\n                ,subtitle: {\r\n                    text: document.ontouchstart === undefined ? \"Click and drag to zoom in\" : \"Drag your finger to zoom in\"\r\n                }\r\n                ,xAxis: {\r\n                    categories: [\"Salary Bucket\"]\r\n                }\r\n                ,yAxis: {\r\n                    min: 0\r\n                    ,title: {\r\n                        text: \"Percentage of Employees\"\r\n                    }\r\n                    ,labels: {\r\n                        formatter: function() {\r\n                            return Math.abs(this.value - 100) + \"%\";\r\n                        }\r\n                    }\r\n                    ,reversed: true\r\n                    //,labels: {enabled: false}\r\n                }\r\n                ,tooltip: {\r\n                    formatter: function() {\r\n                        return \"$\" + this.series.name + \"-\" + (parseInt(this.series.name, 0) + 9) + \"k: \" + util.formatNumber(this.y) +' ('+ Math.round(this.percentage) +'%)';\r\n                    }\r\n                }\r\n                ,plotOptions: {\r\n                    series: {\r\n                        stacking: \"percent\"\r\n                    }\r\n                }\r\n                ,legend: { enabled: false }\r\n                ,series: series\r\n            });\r\n        }\r\n    });\r\n    \r\n"],[0,"})(windo"]],"start1":5676,"start2":5676,"length1":16,"length2":3104}]],"length":8894,"saved":false}
{"ts":1362332765275,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"complete: functi"]],"start1":5936,"start2":5936,"length1":32,"length2":34},{"diffs":[[0,"ng(false);} "],[-1,"             "],[1,"// why doesn't this work for SalaryGroup?\r\n                success: function() {util.loading(false);}\r\n                ,error: function() {util.loading(false);}"],[0,"\r\n          "]],"start1":5986,"start2":5986,"length1":37,"length2":184}]],"length":9043,"saved":false}
{"ts":1362332838624,"patch":[[{"diffs":[[0,"t).text();\r\n"],[1,"            $(e.currentTarget).toggleClass(\"active\");\r\n"],[0,"            "]],"start1":1543,"start2":1543,"length1":24,"length2":79}]],"length":9098,"saved":false}
{"ts":1362332854703,"patch":[[{"diffs":[[0,"Target)."],[1,"parent(\"li\")."],[0,"toggleCl"]],"start1":1578,"start2":1578,"length1":16,"length2":29}]],"length":9111,"saved":false}
{"ts":1362332957479,"patch":[[{"diffs":[[0,"\n    });\r\n    \r\n"],[1,"    app.Views.Charts.SizeVsDollarsLine = Backbone.View.extend({\r\n        initialize: function() {\r\n            this.collection.on(\"reset\", this.render, this);\r\n            util.loading(true);\r\n            this.collection.fetch({ // TODO: Need error handler\r\n                complete: function() {util.loading(false);}              \r\n            });\r\n        }\r\n        ,render: function() {\r\n            var categories = [], employees = [], salaries = [];\r\n            this.collection.each(function(row) {\r\n                categories.push(row.get(\"department\"));\r\n                employees.push(row.get(\"count\"));\r\n                salaries.push(row.get(\"salaries\"));\r\n            });\r\n                \r\n            new Highcharts.Chart({\r\n                chart: {\r\n                    renderTo: container\r\n                    ,zoomType: \"x\"\r\n                    ,height: \"300\"\r\n                    ,backgroundColor: \"rgba(255, 255, 255, 0.1)\"\r\n                }\r\n                ,title: {\r\n                    text: \"Salary Dollars vs # of Employees per Department\"\r\n                }\r\n                ,subtitle: {\r\n                    text: document.ontouchstart === undefined ? \"Click and drag to zoom in\" : \"Drag your finger to zoom in\"\r\n                }\r\n                ,xAxis: [{\r\n                    categories: categories\r\n                    ,labels: {enabled: false}\r\n                }]\r\n                ,yAxis: [\r\n                    { // Primary yAxis\r\n                        title: {\r\n                            text: \"# of Employees\"\r\n                            ,style: {color: \"#4572A7\"}\r\n                        }\r\n                        ,labels: {\r\n                            formatter: function() {\r\n                                return util.formatNumber(this.value);\r\n                            }\r\n                            ,style: {color: \"#4572A7\"}\r\n                        }\r\n                    }\r\n                    ,{ // Secondary yAxis\r\n                        title: {\r\n                            text: \"Salary Dollars\",\r\n                            style: {color: \"#89A54E\"}\r\n                        }\r\n                        ,labels: {\r\n                            formatter: function() {\r\n                                return \"$\" + util.formatNumber(this.value);\r\n                            }\r\n                            ,style: {color: \"#89A54E\"}\r\n                        }\r\n                        ,opposite: true\r\n                        ,min: 0\r\n                    }\r\n                ]\r\n                ,tooltip: {\r\n                    formatter: function() {\r\n                        return this.x + \": \" + (this.series.name === \"Salary Dollars\" ? \"$\" : \"\") + util.formatNumber(this.y);\r\n                    }\r\n                }\r\n                ,legend: {\r\n                    enabled: false\r\n                    /*layout: 'vertical',\r\n                    align: 'left',\r\n                    x: 120,\r\n                    verticalAlign: 'top',\r\n                    y: 100,\r\n                    floating: true,\r\n                    backgroundColor: '#FFFFFF'*/\r\n                }\r\n                ,series: [\r\n                    {\r\n                        name: '# of Employees'\r\n                        ,color: '#4572A7'\r\n                        ,type: 'column'\r\n                        ,data: employees\r\n                    }\r\n                    ,{\r\n                        name: 'Salary Dollars'\r\n                        ,color: '#89A54E'\r\n                        ,type: 'spline'\r\n                        ,yAxis: 1\r\n                        ,data: salaries\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    });\r\n    \r\n"],[0,"    app.Collecti"]],"start1":4349,"start2":4349,"length1":32,"length2":3731}]],"length":12810,"saved":false}
{"ts":1362332972023,"patch":[[{"diffs":[[0,"\n    });\r\n    \r\n"],[1,"    app.Views.Charts.DollarsPie = Backbone.View.extend({\r\n        initialize: function() {\r\n            this.collection.on(\"reset\", this.render, this);\r\n            util.loading(true);\r\n            this.collection.fetch({ // TODO: Need error handler\r\n                complete: function() {util.loading(false);}              \r\n            });\r\n        }\r\n        ,render: function() {\r\n        }\r\n    });\r\n    \r\n"],[0,"    app.Collecti"]],"start1":8048,"start2":8048,"length1":32,"length2":443}]],"length":13221,"saved":false}
{"ts":1362332987414,"patch":[[{"diffs":[[0,": function() {\r\n"],[1,"            var data = [];\r\n            this.collection.each(function(row) {\r\n                data.push([row.get(\"department\"), row.get(\"salaries\")]);\r\n            });\r\n            \r\n            new Highcharts.Chart({\r\n                chart: {\r\n                    renderTo: container\r\n                    ,backgroundColor: \"rgba(255, 255, 255, 0.1)\"\r\n                },\r\n                title: {\r\n                    text: \"Salaries by Department\"\r\n                },\r\n                tooltip: {\r\n                    formatter: function() {\r\n                        return this.key + \": <b>$\" + util.formatNumber(this.y) + \"</b> (\" + Math.round(this.percentage*100)/100 + \"%)\";\r\n                    }\r\n                    ,percentageDecimals: 1\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            color: '#000000',\r\n                            connectorColor: '#000000',\r\n                            formatter: function() {\r\n                                return '<b>'+ this.point.name +'</b>: '+ this.percentage.toFixed(2) +' %';\r\n                            }\r\n                        }\r\n                    }\r\n                    ,series: {\r\n                        cropThreshold: 10\r\n                    }\r\n                },\r\n                series: [{\r\n                    type: 'pie'\r\n                    ,name: 'Salaries'\r\n                    ,data: data\r\n                    /*,point: {\r\n                        events: {\r\n                            click: function() {\r\n                                alert(\"clicked\");\r\n                            }\r\n                        }\r\n                    }*/\r\n                }]\r\n            });\r\n"],[0,"        }\r\n    }"]],"start1":8433,"start2":8433,"length1":32,"length2":1919}]],"length":15108,"saved":false}
{"ts":1362333137521,"patch":[[{"diffs":[[0,"  renderTo: "],[-1,"container"],[1,"this.el"],[0,"\r\n          "]],"start1":5148,"start2":5148,"length1":33,"length2":31},{"diffs":[[0,"To: "],[-1,"container"],[1,"this.el"],[0,"\r\n  "]],"start1":8718,"start2":8718,"length1":17,"length2":15}]],"length":15104,"saved":false}
{"ts":1362333293932,"patch":[[{"diffs":[[0,"on !== undefined"],[1," && ! this.collection.length"],[0,") {\r\n           "]],"start1":657,"start2":657,"length1":32,"length2":60}]],"length":15132,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362333800568,"patch":[[{"diffs":[[0,": function() {\r\n"],[1,"            if( ! this.collection.length) {\r\n    "],[0,"            this"]],"start1":2332,"start2":2332,"length1":32,"length2":81},{"diffs":[[0,");\r\n            "],[1," "],[1,"   "],[0,"util.loading(tru"]],"start1":2454,"start2":2454,"length1":32,"length2":36},{"diffs":[[0,"loading(true);\r\n"],[1,"    "],[0,"            this"]],"start1":2479,"start2":2479,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"complete: functi"]],"start1":2564,"start2":2564,"length1":32,"length2":36},{"diffs":[[0,"  \r\n            "],[-1,"});"],[1,"    });\r\n            }"],[0,"\r\n        }\r\n   "]],"start1":2639,"start2":2639,"length1":35,"length2":54}]],"length":15212,"saved":false}
{"ts":1362333804747,"patch":[[{"diffs":[[0,": function() {\r\n"],[1,"            if( ! this.collection.length) {\r\n    "],[0,"            this"]],"start1":4556,"start2":4556,"length1":32,"length2":81},{"diffs":[[0,");\r\n            "],[1," "],[1,"   "],[0,"util.loading(tru"]],"start1":4678,"start2":4678,"length1":32,"length2":36},{"diffs":[[0,"loading(true);\r\n"],[1,"    "],[0,"            this"]],"start1":4703,"start2":4703,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"complete: functi"]],"start1":4788,"start2":4788,"length1":32,"length2":36},{"diffs":[[0,"  \r\n            "],[-1,"});"],[1,"    });\r\n            }"],[0,"\r\n        }\r\n   "]],"start1":4863,"start2":4863,"length1":35,"length2":54}]],"length":15292,"saved":false}
{"ts":1362333811368,"patch":[[{"diffs":[[0,": function() {\r\n"],[1,"            if( ! this.collection.length) {\r\n    "],[0,"            this"]],"start1":8326,"start2":8326,"length1":32,"length2":81},{"diffs":[[0,");\r\n            "],[1," "],[1,"   "],[0,"util.loading(tru"]],"start1":8448,"start2":8448,"length1":32,"length2":36},{"diffs":[[0,"loading(true);\r\n"],[1,"    "],[0,"            this"]],"start1":8473,"start2":8473,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"complete: functi"]],"start1":8558,"start2":8558,"length1":32,"length2":36},{"diffs":[[0,"  \r\n            "],[-1,"});"],[1,"    });\r\n            }"],[0,"\r\n        }\r\n   "]],"start1":8633,"start2":8633,"length1":35,"length2":54}]],"length":15372,"saved":false}
{"ts":1362333847592,"patch":[[{"diffs":[[0,"           });\r\n"],[1,"            } else {\r\n                this.render();\r\n"],[0,"            }\r\n "]],"start1":2648,"start2":2648,"length1":32,"length2":86}]],"length":15426,"saved":false}
{"ts":1362333864656,"patch":[[{"diffs":[[0,"\n            if("],[-1," ! "],[0,"this.collection."]],"start1":2347,"start2":2347,"length1":35,"length2":32},{"diffs":[[0,"tion.length) {\r\n"],[1,"                this.render();\r\n            } else {\r\n"],[0,"                "]],"start1":2374,"start2":2374,"length1":32,"length2":86},{"diffs":[[0,");\r\n"],[-1,"            } else {\r\n                this.render();\r\n"],[0,"    "]],"start1":2711,"start2":2711,"length1":62,"length2":8}]],"length":15423,"saved":false}
{"ts":1362333869166,"patch":[[{"diffs":[[0,"\n            if("],[-1," ! "],[0,"this.collection."]],"start1":4622,"start2":4622,"length1":35,"length2":32},{"diffs":[[0,"tion.length) {\r\n"],[1,"                this.render();\r\n            } else {\r\n"],[0,"                "]],"start1":4649,"start2":4649,"length1":32,"length2":86}]],"length":15474,"saved":false}
{"ts":1362333874007,"patch":[[{"diffs":[[0,"     if("],[-1," ! "],[0,"this.col"]],"start1":8451,"start2":8451,"length1":19,"length2":16},{"diffs":[[0,"tion.length) {\r\n"],[1,"                this.render();\r\n            } else {\r\n"],[0,"                "]],"start1":8470,"start2":8470,"length1":32,"length2":86}]],"length":15525,"saved":false}
{"ts":1362334692040,"patch":[[{"diffs":[[0," {\r\n"],[-1,"            if(this.collection.length) {\r\n                this.render();\r\n            } else {\r\n    "],[0,"    "]],"start1":2344,"start2":2344,"length1":108,"length2":8},{"diffs":[[0,");\r\n            "],[-1,"    "],[0,"util.loading(tru"]],"start1":2405,"start2":2405,"length1":36,"length2":32},{"diffs":[[0,");\r\n            "],[-1,"   "],[-1," "],[0,"this.collection."]],"start1":2438,"start2":2438,"length1":36,"length2":32},{"diffs":[[0," error handler\r\n"],[-1,"    "],[0,"                "]],"start1":2491,"start2":2491,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"   "],[-1," "],[0,"});\r\n"],[-1,"            }\r\n"],[0,"    "]],"start1":2590,"start2":2590,"length1":32,"length2":13}]],"length":15394,"saved":false}
{"ts":1362334713383,"patch":[[{"diffs":[[0," {\r\n"],[-1,"            if(this.collection.length) {\r\n                this.render();\r\n            } else {\r\n    "],[0,"    "]],"start1":4488,"start2":4488,"length1":108,"length2":8},{"diffs":[[0,");\r\n            "],[-1,"    "],[0,"util.loading(tru"]],"start1":4549,"start2":4549,"length1":36,"length2":32},{"diffs":[[0,");\r\n            "],[-1,"   "],[-1," "],[0,"this.collection."]],"start1":4582,"start2":4582,"length1":36,"length2":32},{"diffs":[[0," error handler\r\n"],[-1,"    "],[0,"                "]],"start1":4635,"start2":4635,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"   "],[-1," "],[0,"});\r\n"],[-1,"            }\r\n"],[0,"    "]],"start1":4734,"start2":4734,"length1":32,"length2":13},{"diffs":[[0," {\r\n"],[-1,"            if(this.collection.length) {\r\n                this.render();\r\n            } else {\r\n    "],[0,"    "]],"start1":8178,"start2":8178,"length1":108,"length2":8},{"diffs":[[0,");\r\n            "],[-1,"    "],[0,"util.loading(tru"]],"start1":8239,"start2":8239,"length1":36,"length2":32},{"diffs":[[0,");\r\n            "],[-1,"   "],[-1," "],[0,"this.collection."]],"start1":8272,"start2":8272,"length1":36,"length2":32},{"diffs":[[0," error handler\r\n"],[-1,"    "],[0,"                "]],"start1":8325,"start2":8325,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"   "],[-1," "],[0,"});\r\n"],[-1,"            }\r\n"],[0,"    "]],"start1":8424,"start2":8424,"length1":32,"length2":13}]],"length":15132,"saved":false}
