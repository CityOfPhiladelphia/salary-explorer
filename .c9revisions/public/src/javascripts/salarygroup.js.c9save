{"ts":1360268597736,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360268616788,"patch":[[{"diffs":[[1,"    app.Collections.SalaryGroups = Backbone.Collection.extend({\r\n        defaultSettings: {\r\n            fields: [\"count\", \"salarygroup\"]\r\n            ,group: true\r\n            ,orderby: \"salarygroup\"\r\n            ,dir: \"asc\"\r\n        }\r\n        ,initialize: function(models, options) {\r\n            this.settings = _.defaults(options.settings || {}, this.defaultSettings);\r\n            this.count = 0;\r\n        }\r\n        ,comparator: function(model) {\r\n            return model.get(\"salarygroup\");\r\n        }\r\n        ,sync: function(method, model, options) {\r\n            if(method !== \"read\") options.error(\"Invalid request method\");\r\n            else db.query(this.settings, options.success, options.error);\r\n        }\r\n        ,parse: function(response) {\r\n            // Convert array of arrays to array of objects with our keys/fields\r\n            var objects = [], object, i, key, self = this;\r\n            _.each(response.rows, function(row) {\r\n                object = {};\r\n                i = 0;\r\n                for(i in row) {\r\n                    key = self.settings.fields[i];\r\n                    object[key] = (key === \"salarygroup\" || key === \"count\" ? parseInt(row[i]) : row[i]);\r\n                }\r\n                objects.push(object);\r\n                \r\n                // Add to the total\r\n                self.count += object[\"count\"] || 0;\r\n            });\r\n            return objects;\r\n        }\r\n    });\r\nvar Salaries = Salaries || {Models: {}, Views: {}, Collections: {}, Routers: {}}\r\n    ,FusionTable = FusionTable || {}\r\n    ,util = util || {};\r\n(function(app, db, util, $, _) {\r\n    \r\n    app.Views.SalaryGroupsView = Backbone.View.extend({\r\n        initialize: function() {\r\n            this.collection = this.options.collection;\r\n            this.template = _.template($(\"#tmpl-salarygroups\").html());\r\n            this.collection.on(\"reset\", this.render, this);\r\n        }\r\n        ,render: function() {            \r\n            // Determine title\r\n            if(this.collection.settings.department === undefined) {\r\n                title = \"All Employees\";\r\n            } else if(codes !== undefined && codes.department !== undefined && codes.department[this.collection.settings.department] !== undefined) {\r\n                title = codes.department[this.collection.settings.department];\r\n            } else {\r\n                title = \"Salaries\"; // Intentionally vague\r\n            }\r\n            \r\n            this.$el.html(this.template({rows: this.collection.toJSON(), count: this.collection.count, settings: this.collection.settings, title: title, buckets: util.salaryBuckets(this.collection, 5, 9)}));\r\n            this.$(\"[rel=\\\"tooltip\\\"]\").tooltip();\r\n            return this;\r\n        }\r\n        ,buildChart: function() {\r\n            var r = Raphael(this.$(\"chart\"));\r\n            //[[55, 20, 13, 32, 5, 1, 2, 10], [10, 2, 1, 5, 32, 13, 20, 55], [12, 20, 30]]\r\n            //r.hbarchart(10, 10, 300, 220, [[10],[20],[10],[30],[0.01]], {stacked: true});\r\n            var pie = r.piechart(320, 240, 100, this.collection.pluck(\"count\"), {legend: this.collection.pluck(\"salarygroup\")});\r\n            pie.hover(function () {\r\n                this.sector.stop();\r\n                this.sector.scale(1.1, 1.1, this.cx, this.cy);\r\n                \r\n                if (this.label) {\r\n                    this.label[0].stop();\r\n                    this.label[0].attr({ r: 7.5 });\r\n                    this.label[1].attr({ \"font-weight\": 800 });\r\n                }\r\n            }, function () {\r\n                this.sector.animate({ transform: 's1 1 ' + this.cx + ' ' + this.cy }, 500, \"bounce\");\r\n                \r\n                if (this.label) {\r\n                    this.label[0].animate({ r: 5 }, 500, \"bounce\");\r\n                    this.label[1].attr({ \"font-weight\": 400 });\r\n                }\r\n            });\r\n        }\r\n        ,buildBlocks: function() {\r\n            var blocks = [], percentage, collectionCount = this.collection.count;\r\n            this.collection.each(function(model) {\r\n                percentage = Math.round(model.get(\"count\")/collectionCount*100*10000)/10000;\r\n                if(percentage >= 2 || ! blocks.length) {\r\n                    blocks.push({\r\n                        percentage: percentage\r\n                        ,min: model.get(\"salarygroup\")\r\n                        ,max: model.get(\"salarygroup\") + 10\r\n                    });\r\n                } else {\r\n                    blocks[blocks.length-1].percentage += percentage;\r\n                    blocks[blocks.length-1].max = model.get(\"salarygroup\") + 10;\r\n                }\r\n            });\r\n            return blocks;\r\n        }\r\n    });\r\n    \r\n})(Salaries, FusionTable, util, jQuery, _);"]],"start1":0,"start2":0,"length1":0,"length2":4731}]],"length":4731,"saved":false}
{"ts":1360268695154,"patch":[[{"diffs":[[1,"var Salaries = Salaries || {Models: {}, Views: {}, Collections: {}, Routers: {}}\r\n    ,FusionTable = FusionTable || {}\r\n    ,util = util || {};\r\n(function(app, db, util, $, _) {\r\n    \r\n"],[0,"    app.Collecti"]],"start1":0,"start2":0,"length1":16,"length2":201},{"diffs":[[0,");\r\n"],[-1,"var Salaries = Salaries || {Models: {}, Views: {}, Collections: {}, Routers: {}}\r\n    ,FusionTable = FusionTable || {}\r\n    ,util = util || {};\r\n(function(app, db, util, $, _) {\r\n"],[0,"    "]],"start1":1614,"start2":1614,"length1":187,"length2":8}]],"length":4737,"saved":false}
{"ts":1360268748841,"patch":[[{"diffs":[[0," }\r\n"],[-1,"        ,buildChart: function() {\r\n            var r = Raphael(this.$(\"chart\"));\r\n            //[[55, 20, 13, 32, 5, 1, 2, 10], [10, 2, 1, 5, 32, 13, 20, 55], [12, 20, 30]]\r\n            //r.hbarchart(10, 10, 300, 220, [[10],[20],[10],[30],[0.01]], {stacked: true});\r\n            var pie = r.piechart(320, 240, 100, this.collection.pluck(\"count\"), {legend: this.collection.pluck(\"salarygroup\")});\r\n            pie.hover(function () {\r\n                this.sector.stop();\r\n                this.sector.scale(1.1, 1.1, this.cx, this.cy);\r\n                \r\n                if (this.label) {\r\n                    this.label[0].stop();\r\n                    this.label[0].attr({ r: 7.5 });\r\n                    this.label[1].attr({ \"font-weight\": 800 });\r\n                }\r\n            }, function () {\r\n                this.sector.animate({ transform: 's1 1 ' + this.cx + ' ' + this.cy }, 500, \"bounce\");\r\n                \r\n                if (this.label) {\r\n                    this.label[0].animate({ r: 5 }, 500, \"bounce\");\r\n                    this.label[1].attr({ \"font-weight\": 400 });\r\n                }\r\n            });\r\n        }\r\n        ,buildBlocks: function() {\r\n            var blocks = [], percentage, collectionCount = this.collection.count;\r\n            this.collection.each(function(model) {\r\n                percentage = Math.round(model.get(\"count\")/collectionCount*100*10000)/10000;\r\n                if(percentage >= 2 || ! blocks.length) {\r\n                    blocks.push({\r\n                        percentage: percentage\r\n                        ,min: model.get(\"salarygroup\")\r\n                        ,max: model.get(\"salarygroup\") + 10\r\n                    });\r\n                } else {\r\n                    blocks[blocks.length-1].percentage += percentage;\r\n                    blocks[blocks.length-1].max = model.get(\"salarygroup\") + 10;\r\n                }\r\n            });\r\n            return blocks;\r\n        }\r\n"],[0,"    "]],"start1":2738,"start2":2738,"length1":1945,"length2":8}]],"length":2800,"saved":false}
{"ts":1360268811726,"patch":[[{"diffs":[[0,"ts: "],[-1,"util.salaryBuckets(this.collection, "],[1,"this.buildBuckets("],[0,"5, 9"]],"start1":2602,"start2":2602,"length1":44,"length2":26},{"diffs":[[0,"tooltip();\r\n"],[-1,""],[0,"            "]],"start1":2675,"start2":2675,"length1":24,"length2":24},{"diffs":[[0,"is;\r\n        }\r\n"],[1,"        ,buildBuckets: function(minPercentage, bucketSize) {\r\n            var totalCount = this.collection.count\r\n                ,buckets = []\r\n                ,percentage, salarygroup, count;\r\n            \r\n            // Loop through each salarygroup model\r\n            this.collection.each(function(model) {\r\n                count = model.get(\"count\")\r\n                percentage = Math.round(count/totalCount*100*10000)/10000;\r\n                salarygroup = model.get(\"salarygroup\");\r\n                \r\n                // If no buckets exist yet, or this bucket meets minPercentage and the previous bucket did as well\r\n                if( ! buckets.length || (percentage >= minPercentage && buckets[buckets.length-1].percentage >= minPercentage)) {\r\n                    buckets.push({\r\n                        percentage: percentage\r\n                        ,min: model.get(\"salarygroup\")\r\n                        ,max: model.get(\"salarygroup\") + bucketSize\r\n                        ,count: model.get(\"count\")\r\n                    });\r\n                // Otherwise add it to the last bucket and increase the last buckets details with this one's\r\n                } else {\r\n                    buckets[buckets.length-1].percentage += percentage;\r\n                    buckets[buckets.length-1].count += count;\r\n                    buckets[buckets.length-1].max = salarygroup + bucketSize;\r\n                }\r\n            });\r\n            return buckets;\r\n        }\r\n"],[0,"    });\r\n    \r\n}"]],"start1":2708,"start2":2708,"length1":32,"length2":1500}]],"length":4250,"saved":false}
{"ts":1360268880708,"patch":[[{"diffs":[[0,"ets("],[-1,"5"],[1,"0"],[0,", 9)"]],"start1":2620,"start2":2620,"length1":9,"length2":9}]],"length":4250,"saved":false}
{"ts":1360269067538,"patch":[[{"diffs":[[0,".View.extend({\r\n"],[1,"        settings: {\r\n            bucketMinPercentage: 0\r\n            ,bucketSize: 9\r\n        }\r\n"],[0,"        initiali"]],"start1":1665,"start2":1665,"length1":32,"length2":128},{"diffs":[[0,"nction() {\r\n"],[-1,""],[0,"            "]],"start1":1799,"start2":1799,"length1":24,"length2":24},{"diffs":[[0,"ets("],[-1,"0, 9"],[0,")}))"]],"start1":2716,"start2":2716,"length1":12,"length2":8},{"diffs":[[0,"ion("],[-1,"minPercentage, bucketSize"],[0,") {\r"]],"start1":2844,"start2":2844,"length1":33,"length2":8},{"diffs":[[0," (percentage >= "],[-1,"m"],[1,"this.settings.bucketM"],[0,"inPercentage && "]],"start1":3454,"start2":3454,"length1":33,"length2":53},{"diffs":[[0,"tage >= "],[-1,"m"],[1,"this.settings.bucketM"],[0,"inPercen"]],"start1":3539,"start2":3539,"length1":17,"length2":37},{"diffs":[[0,"oup\") + "],[1,"this.settings."],[0,"bucketSi"]],"start1":3775,"start2":3775,"length1":16,"length2":30},{"diffs":[[0,"ount += count;\r\n"],[-1,""],[0,"                "]],"start1":4142,"start2":4142,"length1":32,"length2":32},{"diffs":[[0,"group + "],[1,"this.settings."],[0,"bucketSi"]],"start1":4216,"start2":4216,"length1":16,"length2":30}]],"length":4385,"saved":false}
{"ts":1360269081587,"patch":[[{"diffs":[[0,"        "],[1,","],[0,"initiali"]],"start1":1777,"start2":1777,"length1":16,"length2":17}]],"length":4386,"saved":false}
{"ts":1360269114824,"patch":[[{"diffs":[[0,"s = []\r\n"],[1,"                ,self = this\r\n"],[0,"        "]],"start1":2929,"start2":2929,"length1":16,"length2":46},{"diffs":[[0,"ygroup, count;\r\n"],[-1,""],[0,"            \r\n  "]],"start1":3001,"start2":3001,"length1":32,"length2":32},{"diffs":[[0," (percentage >= "],[-1,"this"],[1,"self"],[0,".settings.bucket"]],"start1":3485,"start2":3485,"length1":36,"length2":36},{"diffs":[[0,"tage >= "],[-1,"this"],[1,"self"],[0,".setting"]],"start1":3570,"start2":3570,"length1":20,"length2":20},{"diffs":[[0,"oup\") + "],[-1,"this"],[1,"self"],[0,".setting"]],"start1":3806,"start2":3806,"length1":20,"length2":20},{"diffs":[[0,"group + "],[-1,"this"],[1,"self"],[0,".setting"]],"start1":4247,"start2":4247,"length1":20,"length2":20}]],"length":4416,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361394981111,"patch":[[{"diffs":[[0,"   \r\n})("],[1,"window, window.jQuery, window._, window.Backbone, window."],[0,"Salaries"]],"start1":4368,"start2":4368,"length1":16,"length2":73},{"diffs":[[0,"laries, "],[1,"window."],[0,"FusionTa"]],"start1":4435,"start2":4435,"length1":16,"length2":23},{"diffs":[[0,"le, "],[-1,"util, jQuery, _"],[1,"window.util"],[0,");"]],"start1":4459,"start2":4459,"length1":21,"length2":17}]],"length":4476,"saved":false}
{"ts":1361394990448,"patch":[[{"diffs":[[-1,"var "],[1,"window.jQuery = window.jQuery || {};\r\nwindow._ = window._ || {};\r\nwindow.Backbone = window.Backbone || {};\r\nwindow."],[0,"Salaries"]],"start1":0,"start2":0,"length1":12,"length2":123},{"diffs":[[0,"aries = "],[1,"window."],[0,"Salaries"]],"start1":118,"start2":118,"length1":16,"length2":23},{"diffs":[[0,"ers: {}}"],[1,";"],[0,"\r\n"],[-1,"    ,"],[1,"window."],[0,"FusionTa"]],"start1":190,"start2":190,"length1":23,"length2":26},{"diffs":[[0,"Table = "],[1,"window."],[0,"FusionTa"]],"start1":214,"start2":214,"length1":16,"length2":23},{"diffs":[[0,"| {}"],[1,";"],[0,"\r\n"],[-1,"    ,util = "],[1,"window.util = window."],[0,"util"]],"start1":242,"start2":242,"length1":22,"length2":32},{"diffs":[[0,"unction("],[1,"window, $, _, Backbone, "],[0,"app, db,"]],"start1":285,"start2":285,"length1":16,"length2":40},{"diffs":[[0,"db, util"],[-1,", $, _"],[0,") {\r\n   "]],"start1":322,"start2":322,"length1":22,"length2":16}]],"length":4632,"saved":false}
