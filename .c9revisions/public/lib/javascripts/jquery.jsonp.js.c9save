{"ts":1359839265635,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1359839260108,"patch":[[{"diffs":[[1,"/*\r\n * jQuery JSONP Core Plugin 2.4.0 (2012-08-21)\r\n *\r\n * https://github.com/jaubourg/jquery-jsonp\r\n *\r\n * Copyright (c) 2012 Julian Aubourg\r\n *\r\n * This document is licensed as free software under the terms of the\r\n * MIT License: http://www.opensource.org/licenses/mit-license.php\r\n */\r\n( function( $ ) {\r\n\r\n    // ###################### UTILITIES ##\r\n\r\n\t// Noop\r\n\tfunction noop() {\r\n\t}\r\n\r\n\t// Generic callback\r\n\tfunction genericCallback( data ) {\r\n\t\tlastValue = [ data ];\r\n\t}\r\n\r\n\t// Call if defined\r\n\tfunction callIfDefined( method , object , parameters ) {\r\n\t\treturn method && method.apply( object.context || object , parameters );\r\n\t}\r\n\r\n\t// Give joining character given url\r\n\tfunction qMarkOrAmp( url ) {\r\n\t\treturn /\\?/ .test( url ) ? \"&\" : \"?\";\r\n\t}\r\n\r\n\tvar // String constants (for better minification)\r\n\t\tSTR_ASYNC = \"async\",\r\n\t\tSTR_CHARSET = \"charset\",\r\n\t\tSTR_EMPTY = \"\",\r\n\t\tSTR_ERROR = \"error\",\r\n\t\tSTR_INSERT_BEFORE = \"insertBefore\",\r\n\t\tSTR_JQUERY_JSONP = \"_jqjsp\",\r\n\t\tSTR_ON = \"on\",\r\n\t\tSTR_ON_CLICK = STR_ON + \"click\",\r\n\t\tSTR_ON_ERROR = STR_ON + STR_ERROR,\r\n\t\tSTR_ON_LOAD = STR_ON + \"load\",\r\n\t\tSTR_ON_READY_STATE_CHANGE = STR_ON + \"readystatechange\",\r\n\t\tSTR_READY_STATE = \"readyState\",\r\n\t\tSTR_REMOVE_CHILD = \"removeChild\",\r\n\t\tSTR_SCRIPT_TAG = \"<script>\",\r\n\t\tSTR_SUCCESS = \"success\",\r\n\t\tSTR_TIMEOUT = \"timeout\",\r\n\r\n\t\t// Window\r\n\t\twin = window,\r\n\t\t// Deferred\r\n\t\tDeferred = $.Deferred,\r\n\t\t// Head element\r\n\t\thead = $( \"head\" )[ 0 ] || document.documentElement,\r\n\t\t// Page cache\r\n\t\tpageCache = {},\r\n\t\t// Counter\r\n\t\tcount = 0,\r\n\t\t// Last returned value\r\n\t\tlastValue,\r\n\r\n\t\t// ###################### DEFAULT OPTIONS ##\r\n\t\txOptionsDefaults = {\r\n\t\t\t//beforeSend: undefined,\r\n\t\t\t//cache: false,\r\n\t\t\tcallback: STR_JQUERY_JSONP,\r\n\t\t\t//callbackParameter: undefined,\r\n\t\t\t//charset: undefined,\r\n\t\t\t//complete: undefined,\r\n\t\t\t//context: undefined,\r\n\t\t\t//data: \"\",\r\n\t\t\t//dataFilter: undefined,\r\n\t\t\t//error: undefined,\r\n\t\t\t//pageCache: false,\r\n\t\t\t//success: undefined,\r\n\t\t\t//timeout: 0,\r\n\t\t\t//traditional: false,\r\n\t\t\turl: location.href\r\n\t\t},\r\n\r\n\t\t// opera demands sniffing :/\r\n\t\topera = win.opera,\r\n\r\n\t\t// IE < 10\r\n\t\toldIE = !!$( \"<div>\" ).html( \"<!--[if IE]><i><![endif]-->\" ).find(\"i\").length;\r\n\r\n\t// ###################### MAIN FUNCTION ##\r\n\tfunction jsonp( xOptions ) {\r\n\r\n\t\t// Build data with default\r\n\t\txOptions = $.extend( {} , xOptionsDefaults , xOptions );\r\n\r\n\t\t// References to xOptions members (for better minification)\r\n\t\tvar successCallback = xOptions.success,\r\n\t\t\terrorCallback = xOptions.error,\r\n\t\t\tcompleteCallback = xOptions.complete,\r\n\t\t\tdataFilter = xOptions.dataFilter,\r\n\t\t\tcallbackParameter = xOptions.callbackParameter,\r\n\t\t\tsuccessCallbackName = xOptions.callback,\r\n\t\t\tcacheFlag = xOptions.cache,\r\n\t\t\tpageCacheFlag = xOptions.pageCache,\r\n\t\t\tcharset = xOptions.charset,\r\n\t\t\turl = xOptions.url,\r\n\t\t\tdata = xOptions.data,\r\n\t\t\ttimeout = xOptions.timeout,\r\n\t\t\tpageCached,\r\n\r\n\t\t\t// Abort/done flag\r\n\t\t\tdone = 0,\r\n\r\n\t\t\t// Life-cycle functions\r\n\t\t\tcleanUp = noop,\r\n\r\n\t\t\t// Support vars\r\n\t\t\tsupportOnload,\r\n\t\t\tsupportOnreadystatechange,\r\n\r\n\t\t\t// Request execution vars\r\n\t\t\tfirstChild,\r\n\t\t\tscript,\r\n\t\t\tscriptAfter,\r\n\t\t\ttimeoutTimer;\r\n\r\n\t\t// If we have Deferreds:\r\n\t\t// - substitute callbacks\r\n\t\t// - promote xOptions to a promise\r\n\t\tDeferred && Deferred(function( defer ) {\r\n\t\t\tdefer.done( successCallback ).fail( errorCallback );\r\n\t\t\tsuccessCallback = defer.resolve;\r\n\t\t\terrorCallback = defer.reject;\r\n\t\t}).promise( xOptions );\r\n\r\n\t\t// Create the abort method\r\n\t\txOptions.abort = function() {\r\n\t\t\t!( done++ ) && cleanUp();\r\n\t\t};\r\n\r\n\t\t// Call beforeSend if provided (early abort if false returned)\r\n\t\tif ( callIfDefined( xOptions.beforeSend , xOptions , [ xOptions ] ) === !1 || done ) {\r\n\t\t\treturn xOptions;\r\n\t\t}\r\n\r\n\t\t// Control entries\r\n\t\turl = url || STR_EMPTY;\r\n\t\tdata = data ? ( (typeof data) == \"string\" ? data : $.param( data , xOptions.traditional ) ) : STR_EMPTY;\r\n\r\n\t\t// Build final url\r\n\t\turl += data ? ( qMarkOrAmp( url ) + data ) : STR_EMPTY;\r\n\r\n\t\t// Add callback parameter if provided as option\r\n\t\tcallbackParameter && ( url += qMarkOrAmp( url ) + encodeURIComponent( callbackParameter ) + \"=?\" );\r\n\r\n\t\t// Add anticache parameter if needed\r\n\t\t!cacheFlag && !pageCacheFlag && ( url += qMarkOrAmp( url ) + \"_\" + ( new Date() ).getTime() + \"=\" );\r\n\r\n\t\t// Replace last ? by callback parameter\r\n\t\turl = url.replace( /=\\?(&|$)/ , \"=\" + successCallbackName + \"$1\" );\r\n\r\n\t\t// Success notifier\r\n\t\tfunction notifySuccess( json ) {\r\n\r\n\t\t\tif ( !( done++ ) ) {\r\n\r\n\t\t\t\tcleanUp();\r\n\t\t\t\t// Pagecache if needed\r\n\t\t\t\tpageCacheFlag && ( pageCache [ url ] = { s: [ json ] } );\r\n\t\t\t\t// Apply the data filter if provided\r\n\t\t\t\tdataFilter && ( json = dataFilter.apply( xOptions , [ json ] ) );\r\n\t\t\t\t// Call success then complete\r\n\t\t\t\tcallIfDefined( successCallback , xOptions , [ json , STR_SUCCESS, xOptions ] );\r\n\t\t\t\tcallIfDefined( completeCallback , xOptions , [ xOptions , STR_SUCCESS ] );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Error notifier\r\n\t\tfunction notifyError( type ) {\r\n\r\n\t\t\tif ( !( done++ ) ) {\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\tcleanUp();\r\n\t\t\t\t// If pure error (not timeout), cache if needed\r\n\t\t\t\tpageCacheFlag && type != STR_TIMEOUT && ( pageCache[ url ] = type );\r\n\t\t\t\t// Call error then complete\r\n\t\t\t\tcallIfDefined( errorCallback , xOptions , [ xOptions , type ] );\r\n\t\t\t\tcallIfDefined( completeCallback , xOptions , [ xOptions , type ] );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check page cache\r\n\t\tif ( pageCacheFlag && ( pageCached = pageCache[ url ] ) ) {\r\n\r\n\t\t\tpageCached.s ? notifySuccess( pageCached.s[ 0 ] ) : notifyError( pageCached );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Install the generic callback\r\n\t\t\t// (BEWARE: global namespace pollution ahoy)\r\n\t\t\twin[ successCallbackName ] = genericCallback;\r\n\r\n\t\t\t// Create the script tag\r\n\t\t\tscript = $( STR_SCRIPT_TAG )[ 0 ];\r\n\t\t\tscript.id = STR_JQUERY_JSONP + count++;\r\n\r\n\t\t\t// Set charset if provided\r\n\t\t\tif ( charset ) {\r\n\t\t\t\tscript[ STR_CHARSET ] = charset;\r\n\t\t\t}\r\n\r\n\t\t\topera && opera.version() < 11.60 ?\r\n\t\t\t\t// onerror is not supported: do not set as async and assume in-order execution.\r\n\t\t\t\t// Add a trailing script to emulate the event\r\n\t\t\t\t( ( scriptAfter = $( STR_SCRIPT_TAG )[ 0 ] ).text = \"document.getElementById('\" + script.id + \"').\" + STR_ON_ERROR + \"()\" )\r\n\t\t\t:\r\n\t\t\t\t// onerror is supported: set the script as async to avoid requests blocking each others\r\n\t\t\t\t( script[ STR_ASYNC ] = STR_ASYNC )\r\n\r\n\t\t\t;\r\n\r\n\t\t\t// Internet Explorer: event/htmlFor trick\r\n\t\t\tif ( oldIE ) {\r\n\t\t\t\tscript.htmlFor = script.id;\r\n\t\t\t\tscript.event = STR_ON_CLICK;\r\n\t\t\t}\r\n\r\n\t\t\t// Attached event handlers\r\n\t\t\tscript[ STR_ON_LOAD ] = script[ STR_ON_ERROR ] = script[ STR_ON_READY_STATE_CHANGE ] = function ( result ) {\r\n\r\n\t\t\t\t// Test readyState if it exists\r\n\t\t\t\tif ( !script[ STR_READY_STATE ] || !/i/.test( script[ STR_READY_STATE ] ) ) {\r\n\r\n\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\tscript[ STR_ON_CLICK ] && script[ STR_ON_CLICK ]();\r\n\r\n\t\t\t\t\t} catch( _ ) {}\r\n\r\n\t\t\t\t\tresult = lastValue;\r\n\t\t\t\t\tlastValue = 0;\r\n\t\t\t\t\tresult ? notifySuccess( result[ 0 ] ) : notifyError( STR_ERROR );\r\n\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Set source\r\n\t\t\tscript.src = url;\r\n\r\n\t\t\t// Re-declare cleanUp function\r\n\t\t\tcleanUp = function( i ) {\r\n\t\t\t\ttimeoutTimer && clearTimeout( timeoutTimer );\r\n\t\t\t\tscript[ STR_ON_READY_STATE_CHANGE ] = script[ STR_ON_LOAD ] = script[ STR_ON_ERROR ] = null;\r\n\t\t\t\thead[ STR_REMOVE_CHILD ]( script );\r\n\t\t\t\tscriptAfter && head[ STR_REMOVE_CHILD ]( scriptAfter );\r\n\t\t\t};\r\n\r\n\t\t\t// Append main script\r\n\t\t\thead[ STR_INSERT_BEFORE ]( script , ( firstChild = head.firstChild ) );\r\n\r\n\t\t\t// Append trailing script if needed\r\n\t\t\tscriptAfter && head[ STR_INSERT_BEFORE ]( scriptAfter , firstChild );\r\n\r\n\t\t\t// If a timeout is needed, install it\r\n\t\t\ttimeoutTimer = timeout > 0 && setTimeout( function() {\r\n\t\t\t\tnotifyError( STR_TIMEOUT );\r\n\t\t\t} , timeout );\r\n\r\n\t\t}\r\n\r\n\t\treturn xOptions;\r\n\t}\r\n\r\n\t// ###################### SETUP FUNCTION ##\r\n\tjsonp.setup = function( xOptions ) {\r\n\t\t$.extend( xOptionsDefaults , xOptions );\r\n\t};\r\n\r\n\t// ###################### INSTALL in jQuery ##\r\n\t$.jsonp = jsonp;\r\n\r\n} )( jQuery );"]],"start1":0,"start2":0,"length1":0,"length2":7971}]],"length":7971,"saved":false}
